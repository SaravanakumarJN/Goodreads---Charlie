[{"C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\index.js":"1","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\reportWebVitals.js":"2","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\App.js":"3","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\redux\\store.js":"4","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\redux\\userData\\action.js":"5","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\redux\\userData\\reducer.js":"6","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\redux\\myBooks\\reducer.js":"7","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\redux\\landingPage\\landingPage_reducers.js":"8","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\redux\\Trivia\\redux.js":"9","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\redux\\genres\\reducer.js":"10","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\redux\\Discussion\\redux.js":"11","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\redux\\peoplePage\\peoplePage_reducers.js":"12","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\redux\\search\\reducer.js":"13","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\redux\\allOptions\\allOption_reducers.js":"14","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\redux\\Post\\postReducer.js":"15","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\routes\\Routes.jsx":"16","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\redux\\Quotes\\reduceradd.js":"17","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\redux\\Quotes\\reducer.js":"18","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\pages\\allOption\\main\\Main.jsx":"19","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\pages\\people\\People.jsx":"20","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\redux\\userData\\actionType.js":"21","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\redux\\myBooks\\actionType.js":"22","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\redux\\Trivia\\actionTypes.js":"23","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\redux\\landingPage\\actionType.js":"24","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\redux\\genres\\actionTypes.js":"25","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\redux\\Discussion\\actionTypes.js":"26","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\redux\\peoplePage\\actionType.js":"27","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\redux\\search\\actionTypes.js":"28","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\redux\\allOptions\\actionType.js":"29","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\redux\\Post\\actionType.js":"30","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\redux\\Quotes\\actionTypeadd.js":"31","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\pages\\people\\people.js":"32","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\redux\\Quotes\\actionType.js":"33","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\routes\\PrivateRoutes.jsx":"34","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\pages\\allSearch\\AllSearch.jsx":"35","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\pages\\genres\\Genres.jsx":"36","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\pages\\allSpecificGenre\\AllSpecificGenre.jsx":"37","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\pages\\Discussion\\Discussion.jsx":"38","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\pages\\specificGenre\\SpecificGenre.jsx":"39","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\pages\\Landing_page\\LandingPage.jsx":"40","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\pages\\PeopleShow\\PeopleShow.jsx":"41","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\pages\\Discussion\\DiscussionArea.jsx":"42","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\pages\\Trivia\\Trivia.jsx":"43","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\pages\\Quotes\\Quotes.jsx":"44","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\pages\\Discussion\\DiscussionPost.jsx":"45","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\pages\\allOption\\Group\\Group.jsx":"46","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\components\\showBookCard\\ShowBookCard.jsx":"47","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\components\\Footer\\Footer.jsx":"48","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\components\\Navbar\\Navbar.jsx":"49","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\pages\\Home\\Home.jsx":"50","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\pages\\Quotes\\MyQuotes.jsx":"51","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\pages\\MyBooks\\MyBooks.jsx":"52","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\pages\\messaging\\chat\\Chat.jsx":"53","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\pages\\Quotes\\AddQuotes.jsx":"54","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\redux\\peoplePage\\action.js":"55","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\redux\\search\\action.js":"56","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\redux\\genres\\action.js":"57","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\redux\\landingPage\\action.js":"58","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\redux\\Discussion\\action.js":"59","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\redux\\allOptions\\action.js":"60","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\redux\\Quotes\\actionadd.js":"61","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\redux\\Trivia\\action.js":"62","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\redux\\myBooks\\action.js":"63","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\redux\\Quotes\\action.js":"64","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\redux\\Post\\action.js":"65","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\pages\\Trivia\\TriviaQuestuion.jsx":"66","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\components\\shelfBookCard\\ShelfBookCard.jsx":"67","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\components\\searchBar\\Search.jsx":"68","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\components\\readButton\\ReadButton.jsx":"69","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\components\\WantToRead\\WantToRead.jsx":"70","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\components\\CurrentlyReading\\CurrentlyReading.jsx":"71","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\components\\Post\\Post.jsx":"72","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\components\\MyBooksCard\\MyBooksCard.jsx":"73","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\components\\searchResultCard\\SearchResultCard.jsx":"74"},{"size":741,"mtime":1612492142008,"results":"75","hashOfConfig":"76"},{"size":362,"mtime":499162500000,"results":"77","hashOfConfig":"76"},{"size":474,"mtime":1612937742424,"results":"78","hashOfConfig":"76"},{"size":1506,"mtime":1612523475657,"results":"79","hashOfConfig":"76"},{"size":1938,"mtime":1612550696014,"results":"80","hashOfConfig":"76"},{"size":892,"mtime":1612492149763,"results":"81","hashOfConfig":"76"},{"size":1423,"mtime":1612371307105,"results":"82","hashOfConfig":"76"},{"size":542,"mtime":1612551364606,"results":"83","hashOfConfig":"76"},{"size":652,"mtime":1612371307105,"results":"84","hashOfConfig":"76"},{"size":1548,"mtime":1612367573587,"results":"85","hashOfConfig":"76"},{"size":1723,"mtime":1612371307105,"results":"86","hashOfConfig":"76"},{"size":343,"mtime":1612371307105,"results":"87","hashOfConfig":"76"},{"size":1532,"mtime":1612367573592,"results":"88","hashOfConfig":"76"},{"size":354,"mtime":1612434891448,"results":"89","hashOfConfig":"76"},{"size":1752,"mtime":1612443731190,"results":"90","hashOfConfig":"76"},{"size":4899,"mtime":1612552525208,"results":"91","hashOfConfig":"76"},{"size":373,"mtime":1612754977277,"results":"92","hashOfConfig":"76"},{"size":746,"mtime":1612754977261,"results":"93","hashOfConfig":"76"},{"size":2769,"mtime":1612443731183,"results":"94","hashOfConfig":"76"},{"size":2537,"mtime":1612523475635,"results":"95","hashOfConfig":"76"},{"size":300,"mtime":1612491174552,"results":"96","hashOfConfig":"76"},{"size":165,"mtime":1612371307105,"results":"97","hashOfConfig":"76"},{"size":145,"mtime":1612371307105,"results":"98","hashOfConfig":"76"},{"size":100,"mtime":1612371307105,"results":"99","hashOfConfig":"76"},{"size":228,"mtime":1612367573586,"results":"100","hashOfConfig":"76"},{"size":544,"mtime":1612371307105,"results":"101","hashOfConfig":"76"},{"size":46,"mtime":1612371307105,"results":"102","hashOfConfig":"76"},{"size":226,"mtime":1612367573590,"results":"103","hashOfConfig":"76"},{"size":49,"mtime":1612434891447,"results":"104","hashOfConfig":"76"},{"size":350,"mtime":1612443731189,"results":"105","hashOfConfig":"76"},{"size":27,"mtime":1612523475648,"results":"106","hashOfConfig":"76"},{"size":143,"mtime":1612371307089,"results":"107","hashOfConfig":"76"},{"size":201,"mtime":1612754977261,"results":"108","hashOfConfig":"76"},{"size":541,"mtime":1612936960316,"results":"109","hashOfConfig":"76"},{"size":1102,"mtime":1612495006556,"results":"110","hashOfConfig":"76"},{"size":1114,"mtime":1612419064741,"results":"111","hashOfConfig":"76"},{"size":1131,"mtime":1612494851022,"results":"112","hashOfConfig":"76"},{"size":282,"mtime":1612371307089,"results":"113","hashOfConfig":"76"},{"size":2139,"mtime":1612419064745,"results":"114","hashOfConfig":"76"},{"size":5509,"mtime":1612937302766,"results":"115","hashOfConfig":"76"},{"size":133,"mtime":1612371307089,"results":"116","hashOfConfig":"76"},{"size":2358,"mtime":1612371307089,"results":"117","hashOfConfig":"76"},{"size":6430,"mtime":1612523475622,"results":"118","hashOfConfig":"76"},{"size":7468,"mtime":1612523475618,"results":"119","hashOfConfig":"76"},{"size":2784,"mtime":1612371307089,"results":"120","hashOfConfig":"76"},{"size":6939,"mtime":1612503263170,"results":"121","hashOfConfig":"76"},{"size":3261,"mtime":1612540450639,"results":"122","hashOfConfig":"76"},{"size":1610,"mtime":1612523475581,"results":"123","hashOfConfig":"76"},{"size":4455,"mtime":1612527890263,"results":"124","hashOfConfig":"76"},{"size":7365,"mtime":1612754977230,"results":"125","hashOfConfig":"76"},{"size":5035,"mtime":1612754977230,"results":"126","hashOfConfig":"76"},{"size":5734,"mtime":1612937805782,"results":"127","hashOfConfig":"76"},{"size":3902,"mtime":1612754914220,"results":"128","hashOfConfig":"76"},{"size":4905,"mtime":1612754977230,"results":"129","hashOfConfig":"76"},{"size":357,"mtime":1612508898328,"results":"130","hashOfConfig":"76"},{"size":1600,"mtime":1612367573589,"results":"131","hashOfConfig":"76"},{"size":1149,"mtime":1612367573584,"results":"132","hashOfConfig":"76"},{"size":925,"mtime":1612597628727,"results":"133","hashOfConfig":"76"},{"size":2802,"mtime":1612371307105,"results":"134","hashOfConfig":"76"},{"size":500,"mtime":1612434891446,"results":"135","hashOfConfig":"76"},{"size":160,"mtime":1612523475650,"results":"136","hashOfConfig":"76"},{"size":761,"mtime":1612371307105,"results":"137","hashOfConfig":"76"},{"size":755,"mtime":1612452482976,"results":"138","hashOfConfig":"76"},{"size":1300,"mtime":1612754977261,"results":"139","hashOfConfig":"76"},{"size":2242,"mtime":1612754977246,"results":"140","hashOfConfig":"76"},{"size":1521,"mtime":1612523475627,"results":"141","hashOfConfig":"76"},{"size":1720,"mtime":1612495165438,"results":"142","hashOfConfig":"76"},{"size":3030,"mtime":1612415238744,"results":"143","hashOfConfig":"76"},{"size":4589,"mtime":1612550577192,"results":"144","hashOfConfig":"76"},{"size":289,"mtime":1612595027201,"results":"145","hashOfConfig":"76"},{"size":732,"mtime":1612523475577,"results":"146","hashOfConfig":"76"},{"size":5824,"mtime":1612754977230,"results":"147","hashOfConfig":"76"},{"size":2015,"mtime":1612754977214,"results":"148","hashOfConfig":"76"},{"size":990,"mtime":1612435383238,"results":"149","hashOfConfig":"76"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},"1h0mssi",{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"152"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"152"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"152"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"152"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"152"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"152"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"152"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"152"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"152"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"152"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"152"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"152"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255","usedDeprecatedRules":"152"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"258","usedDeprecatedRules":"152"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263","usedDeprecatedRules":"152"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266","usedDeprecatedRules":"152"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"269","usedDeprecatedRules":"152"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276","usedDeprecatedRules":"152"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"287","usedDeprecatedRules":"152"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298","usedDeprecatedRules":"152"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"301","usedDeprecatedRules":"152"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"312","usedDeprecatedRules":"152"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"317","usedDeprecatedRules":"152"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},"C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\index.js",[],["322","323"],"C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\reportWebVitals.js",[],"C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\App.js",["324","325"],"C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\redux\\store.js",[],"C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\redux\\userData\\action.js",[],"C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\redux\\userData\\reducer.js",[],"C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\redux\\myBooks\\reducer.js",[],"C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\redux\\landingPage\\landingPage_reducers.js",[],"C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\redux\\Trivia\\redux.js",[],"C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\redux\\genres\\reducer.js",[],"C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\redux\\Discussion\\redux.js",[],"C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\redux\\peoplePage\\peoplePage_reducers.js",[],"C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\redux\\search\\reducer.js",[],"C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\redux\\allOptions\\allOption_reducers.js",[],"C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\redux\\Post\\postReducer.js",[],"C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\routes\\Routes.jsx",["326"],"import React from \"react\";\r\nimport { Route, Switch, useParams, useRouteMatch } from \"react-router-dom\";\r\nimport { ShowBookCard } from \"../components/showBookCard/ShowBookCard\";\r\nimport { AllSearch } from \"../pages/allSearch/AllSearch\";\r\nimport { AllSpecificGenre } from \"../pages/allSpecificGenre/AllSpecificGenre\";\r\nimport { Genres } from \"../pages/genres/Genres\";\r\nimport { SpecificGenre } from \"../pages/specificGenre/SpecificGenre\";\r\nimport { Discussion } from \"../pages/Discussion/Discussion\";\r\nimport { DiscussionPost } from \"../pages/Discussion/DiscussionPost\";\r\n// import { Home } from \"../pages/Discussion/Home\";\r\nimport { Home } from \"../pages/Home/Home\";\r\nimport DiscussionArea from \"../pages/Discussion/DiscussionArea\";\r\nimport { Trivia } from \"../pages/Trivia/Trivia\";\r\nimport { People } from \"../pages/people/People.jsx\";\r\nimport { PeopleShow } from \"../pages/PeopleShow/PeopleShow\";\r\nimport { Navbar } from \"../components/Navbar/Navbar\";\r\nimport { MyBooks } from \"../pages/MyBooks/MyBooks\";\r\nimport { LandingPage } from \"../pages/Landing_page/LandingPage\";\r\nimport { Footer } from \"../components/Footer/Footer\";\r\nimport { Group } from \"../pages/allOption/Group/Group\";\r\nimport { Main } from \"../pages/allOption/main/Main\";\r\nimport { Chat } from \"../pages/messaging/chat/Chat\";\r\nimport { Quotes } from \"../pages/Quotes/Quotes\";\r\nimport { MyQuotes } from \"../pages/Quotes/MyQuotes\";\r\nimport { AddQuotes } from \"../pages/Quotes/AddQuotes\";\r\nimport {PrivateRoutes} from './PrivateRoutes'\r\n\r\nconst Routes = () => {\r\n  let { path } = useRouteMatch();\r\n\r\n  console.log(path);\r\n  return (\r\n    <div className=\"container\">\r\n      <Switch>\r\n        <Route exact path=\"/login\">\r\n          <LandingPage />\r\n        </Route>\r\n        <PrivateRoutes exact path=\"/genres\">\r\n          <Navbar></Navbar>\r\n          <Genres></Genres>\r\n        </PrivateRoutes>\r\n        <PrivateRoutes exact path=\"/genre/:type\">\r\n          <Navbar></Navbar>\r\n          <SpecificGenre></SpecificGenre>\r\n        </PrivateRoutes>\r\n        <PrivateRoutes exact path=\"/shelf/show/:genreType\">\r\n          <Navbar></Navbar>\r\n          <AllSpecificGenre></AllSpecificGenre>\r\n        </PrivateRoutes>\r\n        <PrivateRoutes exact path=\"/book/show/:bookId\">\r\n          <Navbar></Navbar>\r\n          <ShowBookCard></ShowBookCard>\r\n        </PrivateRoutes>\r\n        <PrivateRoutes path=\"/search/:query\">\r\n          <Navbar></Navbar>\r\n          <AllSearch></AllSearch>\r\n        </PrivateRoutes>\r\n        <PrivateRoutes exact path=\"/\">\r\n          <Navbar></Navbar>\r\n          <Home />\r\n        </PrivateRoutes>\r\n        <PrivateRoutes exact path=\"/mybooks\">\r\n          <Navbar></Navbar>\r\n          <MyBooks />\r\n        </PrivateRoutes>\r\n        <PrivateRoutes exact path=\"/discussion\">\r\n          <Navbar></Navbar>\r\n          <Discussion />\r\n        </PrivateRoutes>\r\n        <PrivateRoutes exact path=\"/discussion/post\">\r\n          <Navbar></Navbar>\r\n          <DiscussionPost />\r\n        </PrivateRoutes>\r\n        <PrivateRoutes exact path=\"/discussion/area\">\r\n          <Navbar></Navbar>\r\n          <DiscussionArea />\r\n        </PrivateRoutes>\r\n        <PrivateRoutes exact path=\"/trivia\">\r\n          <Navbar></Navbar>\r\n          <Trivia />\r\n        </PrivateRoutes>\r\n        <PrivateRoutes exact path=\"/quotes\">\r\n          <Navbar></Navbar>\r\n          <Quotes />\r\n        </PrivateRoutes>\r\n        <PrivateRoutes exact path=\"/myQuotes\">\r\n          <Navbar></Navbar>\r\n          <MyQuotes />\r\n        </PrivateRoutes>\r\n        <PrivateRoutes exact path=\"/addQuotes\">\r\n          <Navbar></Navbar>\r\n          <AddQuotes />\r\n        </PrivateRoutes>\r\n        <PrivateRoutes exact path=\"/people\">\r\n          <Navbar></Navbar>\r\n          <People></People>\r\n        </PrivateRoutes>\r\n        <PrivateRoutes exact path=\"/people/show/:id\">\r\n          <Navbar></Navbar>\r\n          <PeopleShow />\r\n        </PrivateRoutes>\r\n        <PrivateRoutes exact path=\"/group\">\r\n          <Navbar></Navbar>\r\n          <Main />\r\n        </PrivateRoutes>\r\n        <PrivateRoutes exact path=\"/group/:g/:q\">\r\n          <Navbar></Navbar>\r\n          <Group />\r\n        </PrivateRoutes>\r\n        <PrivateRoutes exact path=\"/chat\">\r\n          <Navbar></Navbar>\r\n          <Chat />\r\n        </PrivateRoutes>\r\n\r\n        <Routes>\r\n          <p style={{ textAlign: \"center\" }}>\r\n            <h1>Sorry, you’ve reached the end of the sidewalk.</h1>\r\n            <br />\r\n            <br />\r\n            Yes we’ll walk with a walk that is measured and slow, And we’ll go\r\n            <br />\r\n            where the chalk-white arrows go, For the children, they mark, and\r\n            <br />\r\n            the children, they know The place where the sidewalk ends.\r\n            <br />\r\n            <br />- Silverstein, Where the Sidewalk Ends\r\n          </p>\r\n        </Routes>\r\n      </Switch>\r\n      <Footer></Footer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { Routes };\r\n","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\redux\\Quotes\\reduceradd.js",[],"C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\redux\\Quotes\\reducer.js",[],"C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\pages\\allOption\\main\\Main.jsx",["327","328","329","330","331"],"import { Button } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { Navbar } from \"../../../components/Navbar/Navbar\";\r\nimport style from \"./main.module.css\";\r\nimport {num} from \"../../people/people\"\r\nimport {Footer} from \"../../../components/Footer/Footer\"\r\nimport {  useRouteMatch,Link, Route,useHistory } from \"react-router-dom\";\r\nconst init = [\r\n  {\r\n    group_name: \"Finction stars\",\r\n    genre: \"fiction\",\r\n  },\r\n  {\r\n    group_name: \"Action pack\",\r\n    genre: \"Action\",\r\n  },\r\n];\r\n\r\nexport const Main = () => {\r\n  const [group_name, setName] = React.useState(\"\");\r\n  const [genre, setGenre] = React.useState(\"\");\r\n  const [group, setgroup] = React.useState(init);\r\n    const history = useHistory()\r\n  const handleCreate = () => {\r\n    const payload = {\r\n      group_name: group_name,\r\n      genre: genre,\r\n    };\r\n    return setgroup([...group, payload]);\r\n  };\r\n\r\n  const handleExplore=(q,g)=>{\r\n     return history.push(`/group/${g}/${q}`)\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n        Join your groups\r\n      <div className={style.box}>\r\n        <input\r\n          type=\"text\"\r\n          onChange={(e) => setName(e.target.value)}\r\n          placeholder=\"group name\"\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          onChange={(e) => setGenre(e.target.value)}\r\n          placeholder=\"genre\"\r\n        />\r\n        <Button\r\n          onClick={handleCreate}\r\n          style={{ marginLeft: \"10px\" }}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n        >\r\n          create group\r\n        </Button>\r\n        {group?.map((item) => {\r\n          return (\r\n            <>\r\n              <div className={style.groupBox}>\r\n                  <div className={style.pBox}>\r\n                  <p style={{ color: \"#32362D\" }}>\r\n                  {item.group_name}<br />\r\n                  {item.genre} <br />\r\n                  {num()} members{\" \"}\r\n                </p>\r\n                  </div>\r\n                  <div className={style.btnBox}>\r\n                    <img src=\"https://hips.hearstapps.com/hmg-prod.s3.amazonaws.com/images/old-books-arranged-on-shelf-royalty-free-image-1572384534.jpg?crop=0.668xw:1.00xh;0,0&resize=480:*\" alt=\"alt\"/>\r\n                  </div>\r\n                <Button \r\n                onClick={()=>handleExplore(item.genre,item.group_name)}\r\n                  style={{\r\n                    marginLeft: \"50px\",\r\n                    height: \"50px\",\r\n                    marginTop: \"20px\",\r\n                    background: \"brown\",\r\n                  }}\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                >\r\n                  Explore the group\r\n                </Button>\r\n              </div>\r\n            </>\r\n          );\r\n        })}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\pages\\people\\People.jsx",["332"],"import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Footer } from \"../../components/Footer/Footer\";\r\nimport { getPeopleData } from \"../../redux/peoplePage/action\";\r\nimport { num } from \"./people\";\r\nimport style from \"./people.module.css\";\r\nexport const People = () => {\r\n  const [follow,setFollow] = React.useState(false)\r\n  const data = useSelector(state=>state.peopleData)\r\n  const dispatch = useDispatch()\r\n  React.useEffect(()=>{\r\n      dispatch(getPeopleData())\r\n  },[dispatch])\r\n\r\n  const handlefollow =()=>{\r\n    setFollow(!follow)\r\n  }\r\n  return (\r\n    <div>\r\n    <>\r\n      <div className={style.box1}>\r\n        <br />\r\n        <h2>Most popular 100 reviewers this week</h2>\r\n        <br />\r\n        <p>\r\n          this week{\" \"}\r\n          <h style={{ opacity: \"0.5\" }}>(generated Jan 27, 2021 12:29PM)</h>\r\n        </p>\r\n        <br />\r\n        <p style={{ fontSize: \"13px\" }}>\r\n          <h>this week</h> | <h>this month</h> | <h>last 12 months</h> |{\" \"}\r\n          <h>all</h>{\" \"}\r\n        </p>\r\n        <br />\r\n      </div>\r\n      <div className={style.profileBox}>\r\n       {\r\n         data.userdata?.map(item =>{\r\n          return  <>\r\n        <div className={style.container}>\r\n        <div className={style.numberbox}>\r\n          <p>1.</p>\r\n        </div>\r\n        <div className={style.imgContainer}>\r\n          <img src={item.image_url} alt=\"alt\" />\r\n        </div>\r\n        <div className={style.detailsContainer}>\r\n          <p style={{ color: \"#00635d\" }}><Link to={`people/show/${item.id}`}>{item.name}</Link></p>\r\n          <p>city</p>\r\n          <p style={{ color: \"#00635d\" }}>{item.private_shelf.length} books | {item.following.length} friends</p>\r\n        </div>\r\n        <div\r\n          style={{ marginLeft: \"50px\" }}\r\n          className={style.detailsContainer}\r\n        >\r\n          <p style={{ color: \"#00635d\" }}> {num()} votes this week</p>\r\n          <p style={{ color: \"#00635d\" }} onClick={handlefollow}>{follow?\"Unfollow reviews\":\"Follow reviews\"}</p>\r\n        </div>\r\n      </div>\r\n    </>\r\n         })\r\n       }\r\n        \r\n      </div>\r\n      <div className={style.meetpeoplebox}>\r\n        <p>Meet People</p>\r\n        <p style={{ fontSize: \"13px\", color: \"#00635d\" }}>\r\n          top readers\r\n          <br /> top reviewers <br />\r\n          most popular reviewers\r\n          <br /> most followed top librarians\r\n          <br /> recent reviews\r\n        </p>\r\n      </div>\r\n      </>\r\n    </div>\r\n    \r\n  );\r\n};\r\n","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\redux\\userData\\actionType.js",[],"C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\redux\\myBooks\\actionType.js",[],"C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\redux\\Trivia\\actionTypes.js",[],"C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\redux\\landingPage\\actionType.js",[],"C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\redux\\genres\\actionTypes.js",[],"C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\redux\\Discussion\\actionTypes.js",[],"C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\redux\\peoplePage\\actionType.js",[],"C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\redux\\search\\actionTypes.js",[],"C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\redux\\allOptions\\actionType.js",[],"C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\redux\\Post\\actionType.js",[],"C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\redux\\Quotes\\actionTypeadd.js",[],"C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\pages\\people\\people.js",[],"C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\redux\\Quotes\\actionType.js",[],"C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\routes\\PrivateRoutes.jsx",["333"],"import React from 'react'\r\nimport {useSelector} from 'react-redux'\r\nimport { Redirect, Route } from 'react-router-dom'\r\n\r\nconst PrivateRoutes = ({path, children, redirectPath = \"/login\", exact = true}) => {\r\n    const isLogin = JSON.parse(localStorage.getItem(\"isLogin\"))\r\n\r\n    if(isLogin === true){\r\n        return(\r\n            <Route path = {path} exact = {exact}>\r\n                {children}\r\n            </Route>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Redirect to = {redirectPath}></Redirect>\r\n    )\r\n}\r\n\r\nexport {PrivateRoutes}\r\n","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\pages\\allSearch\\AllSearch.jsx",["334"],"import React from 'react'\r\nimport styles from './AllSearch.module.css'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport { useParams } from 'react-router-dom'\r\nimport {ShelfBookCard} from '../../components/shelfBookCard/ShelfBookCard'\r\nimport { bookSearchPerformer } from '../../redux/search/action'\r\n\r\nconst AllSearch = () => {\r\n    const searchItems = useSelector(state => state.book.searchItems)\r\n    const {query} = useParams()\r\n    const dispatch = useDispatch()\r\n    let endpoint = query.replace(/%20/g, \" \")\r\n\r\n    React.useEffect(() => {\r\n        dispatch(bookSearchPerformer(endpoint))\r\n    }, [])\r\n\r\n    return (\r\n        <div className = {styles.container}>\r\n            <h3>{endpoint.toUpperCase()} BOOKS</h3>\r\n            {\r\n                searchItems?.map((item) => {\r\n                    return(\r\n                        <ShelfBookCard\r\n                            key = {item.id}\r\n                            item = {item}\r\n                        ></ShelfBookCard>\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport {AllSearch}\r\n","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\pages\\genres\\Genres.jsx",[],"C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\pages\\allSpecificGenre\\AllSpecificGenre.jsx",["335"],"import React from 'react'\r\nimport styles from './AllSpecificGenre.module.css'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport { useParams } from 'react-router-dom'\r\nimport {ShelfBookCard} from '../../components/shelfBookCard/ShelfBookCard'\r\nimport { genreSearchPerformer } from '../../redux/genres/action'\r\n\r\nconst AllSpecificGenre = () => {\r\n    const genreItems = useSelector(state => state.genre.genreItems)\r\n    const {genreType} = useParams()\r\n    const dispatch = useDispatch()\r\n    let endpoint = genreType.replace(/%20/g, \" \")\r\n\r\n    React.useEffect(() => {\r\n        dispatch(genreSearchPerformer(endpoint))\r\n    }, [])\r\n\r\n    return (\r\n        <div className = {styles.container}>\r\n            <h3>{endpoint.toUpperCase()} BOOKS</h3>\r\n            {\r\n                genreItems?.map((item) => {\r\n                    return(\r\n                        <ShelfBookCard\r\n                            key = {item.id}\r\n                            item = {item}\r\n                        ></ShelfBookCard>\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport {AllSpecificGenre}\r\n","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\pages\\Discussion\\Discussion.jsx",[],"C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\pages\\specificGenre\\SpecificGenre.jsx",["336"],"import React from 'react'\r\nimport { shallowEqual, useSelector, useDispatch } from 'react-redux'\r\nimport { Link, useHistory, useParams } from 'react-router-dom'\r\nimport { genreSearchPerformer} from '../../redux/genres/action'\r\nimport styles from './SpecificGenre.module.css'\r\n\r\nconst SpecificGenre = () => {\r\n    const {genreItems} = useSelector(state => state.genre, shallowEqual)\r\n    const {type} = useParams()\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n\r\n    React.useEffect(() => {\r\n        dispatch(genreSearchPerformer(type))\r\n    }, [])\r\n\r\n    const handleBook = (bookId) => {\r\n        history.push(`/book/show/${bookId}`)\r\n    }\r\n\r\n    return (\r\n        <div className = {styles.container}>\r\n            <h3>{type.toUpperCase()} BOOKS</h3>\r\n            <div className = {styles.bookContainer}>\r\n                {\r\n                    genreItems?.map((item, i) => {\r\n                        if(i < 15){\r\n                            const {imageLinks, title} = item.volumeInfo\r\n                            const src = imageLinks === undefined ? \"https://via.placeholder.com/110x180.png?text=No+image\" : imageLinks.smallThumbnail\r\n                            return(\r\n                                <img\r\n                                    onClick = {() => handleBook(item.id)}\r\n                                    key = {item.id}\r\n                                    className = {styles.img}\r\n                                    src =  {src}\r\n                                    alt = {title}\r\n                                ></img>\r\n                            )\r\n                        }\r\n                        else{\r\n                            return null\r\n                        } \r\n                    })\r\n                }\r\n            </div>\r\n            {\r\n                genreItems?.length > 15 \r\n                ? <div className = {styles.linkDiv}>\r\n                    <Link className = {styles.link} to = {`/shelf/show/${type}`}>{`More ${type} books...`}</Link>\r\n                </div>\r\n                : null\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport {SpecificGenre}\r\n\r\n\r\n\r\n","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\pages\\Landing_page\\LandingPage.jsx",["337","338"],"import React from \"react\";\r\nimport style from \"./landing.module.css\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Footer } from \"../../components/Footer/Footer\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { name,sendAuthLogin,sendAuthRegister } from \"../../redux/landingPage/action\";\r\nimport { Redirect, useHistory } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  btn: {\r\n    color: \"white\",\r\n    background: \"#333333\",\r\n    marginTop: \"5px\",\r\n    marginLeft: \"10px\",\r\n    \"&:hover\": {\r\n      background: \"#424242\",\r\n    },\r\n  },\r\n  btn2: {\r\n    color: \"white\",\r\n    background: \"#FFD767\",\r\n    marginTop: \"55px\",\r\n    marginLeft: \"10px\",\r\n    \"&:hover\": {\r\n      background: \"#ffde82\",\r\n    },\r\n  },\r\n}));\r\nexport const LandingPage = () => {\r\n  const classes = useStyles();\r\n  const [email,setEmail] = React.useState()\r\n  const [email2,setEmail2] = React.useState()\r\n  const [username,setUsername] = React.useState()\r\n  const [password,setPassword] = React.useState()\r\n  const [password2,setPassword2] = React.useState()\r\n  const signin = useSelector(state=>state.signin.login)\r\n  const history = useHistory()\r\n  const dispatch = useDispatch()\r\n  const handleRegister =()=>{\r\n      let payload ={\r\n        email:email,\r\n        password:password\r\n      }\r\n      dispatch(name(username))\r\n      dispatch(sendAuthRegister(payload))\r\n      setEmail(\"\")\r\n      setPassword(\"\")\r\n      setUsername(\"\")\r\n  }\r\n  const handleLogin =()=>{\r\n    let payload ={\r\n      email:email2,\r\n      password:password2\r\n    }\r\n    localStorage.setItem(\"isLogin\", JSON.stringify(true))\r\n    dispatch(sendAuthLogin(payload))\r\n    setEmail(\"\")\r\n    setPassword(\"\")\r\n  }\r\n\r\n  const isLogin = JSON.parse(localStorage.getItem(\"isLogin\"))\r\n  React.useEffect(() => {\r\n\r\n  }, [signin])\r\n\r\n  if(isLogin === true){\r\n    history.push(\"/\")\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className={style.navBar}>\r\n        <img\r\n          className={style.logo}\r\n          src=\"https://s.gr-assets.com/assets/home/header_logo-8d96d7078a3d63f9f31d92282fd67cf4.png\"\r\n          alt=\"logo\"\r\n        />\r\n        <div className={style.loginContainer}>\r\n          <input onChange={(e)=>setEmail2(e.target.value)}  type=\"email\" placeholder=\"email\" />\r\n          <input onChange={(e)=>setPassword2(e.target.value)}   type=\"password\" placeholder=\"password\" />\r\n          <Button onClick={handleLogin}  className={classes.btn} variant=\"contained\" color=\"primary\">\r\n            sign in\r\n          </Button>\r\n          <p>Forget it ?</p>\r\n        </div>\r\n      </div>\r\n      <div className={style.banner}>\r\n        <div className={style.bannerImg}>\r\n          <p>Announcing the</p>\r\n          <h1>\r\n            Best Book\r\n            <br />\r\n            of 2021\r\n          </h1>\r\n          <p id={style.bannerImg_p}>\r\n            See the winners in our community of readers\r\n          </p>\r\n        </div>\r\n        <div className={style.signUpContainer}>\r\n          <p>New here? Create a free account!</p>\r\n          <input onChange={(e)=>setUsername(e.target.value)} value={username} type=\"name\" placeholder=\"username\" />\r\n          <br />\r\n          <input onChange={(e)=>setEmail(e.target.value)}  type=\"email\" placeholder=\"email\" />\r\n          <br />\r\n          <input onChange={(e)=>setPassword(e.target.value)} type=\"password\" placeholder=\"password\" />\r\n          <br />\r\n          <Button onClick={handleRegister} className={classes.btn} variant=\"contained\" color=\"primary\">\r\n            sign up\r\n          </Button>\r\n          <p>\r\n            By clicking “Sign up” I agree to the Goodreads Terms of Service and\r\n            confirm that I am at least 13 years old.\r\n          </p>\r\n        </div>\r\n        {/* <img className={style.bookpng} src=\"https://freepngimg.com/thumb/categories/2299.png\" alt=\"alt\"/> */}\r\n      </div>\r\n      <div className={style.banner2}>\r\n        <div className={style.banner2_container1}>\r\n          <h2 id={style.banner2_container1_h2}>\r\n            12th Annual Goodreads Choice Awards\r\n          </h2>\r\n          <p>\r\n            See the winners in the only major book awards decided by readers.\r\n          </p>\r\n          <div className={style.list}>\r\n            <li>Best Fiction</li>\r\n            <li>Best Romance</li>\r\n            <li>Best Action</li>\r\n            <li>Best Non-Fiction</li>\r\n          </div>\r\n          <div className={style.list}>\r\n            <li>Best Humor</li>\r\n            <li>Best Fantasy</li>\r\n            <li>Best Love</li>\r\n            <li>Best Drama</li>\r\n          </div>\r\n          <div className={style.list}>\r\n            <li>Best Mentor-Books</li>\r\n            <li>Best Historical-Fiction</li>\r\n            <li>Best Action</li>\r\n            <li>Best Young adult</li>\r\n          </div>\r\n          <Button className={classes.btn2} variant=\"contained\" color=\"primary\">\r\n            see for the winners\r\n          </Button>\r\n        </div>\r\n        <div className={style.books }>\r\n            <p style={{fontSize: \"18px\"}}>News & Interviews</p>\r\n            <br/>\r\n            <p>7 greater books hitting shelves This Week</p>\r\n            <div className={style.bookshelves}>\r\n                <img src=\"https://images.gr-assets.com/blogs/1611614949p7/1998.jpg\" alt=\"img\"/>\r\n            </div>\r\n            <br/>\r\n            <br/>\r\n            <p style={{fontSize: \"13px\",opacity:\"0.5\"}}>15 likes - <span>11 comments</span></p>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\pages\\PeopleShow\\PeopleShow.jsx",[],"C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\pages\\Discussion\\DiscussionArea.jsx",["339","340","341"],"import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport styles from \"./DiscussionArea.module.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  getDataPost,\r\n  Post1Dis,\r\n  getDataPost1,\r\n} from \"../../redux/Discussion/action\";\r\nconst DiscussionArea = () => {\r\n  const data = useSelector((state) => state.disPost.data);\r\n  const isLoading1 = useSelector((state) => state.disPost.isLoading1);\r\n  const isLoading2 = useSelector((state) => state.disPost.isLoading2);\r\n  const comments = useSelector((state) => state.disPost.comments);\r\n  console.log(\"comme\", comments);\r\n  const dispatch = useDispatch();\r\n  // React.useEffect(() => {\r\n  //   dispatch(getDataPost());\r\n  // }, []);\r\n  const [post, setPost] = React.useState(\"\");\r\n  const handlePost = () => {\r\n    const payload = {\r\n      post,\r\n    };\r\n    dispatch(Post1Dis(payload));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {!isLoading1 ? (\r\n        <div>.....isLoading</div>\r\n      ) : (\r\n        <div className={styles.cont}>\r\n          <h1>\r\n            <Link>{data.bookname}</Link> discussion\r\n          </h1>\r\n          <h3>topic:{data.topic}</h3>\r\n          <label htmlFor=\"\">\r\n            comment\r\n            <br />\r\n            <textarea\r\n              name=\"post\"\r\n              value={post}\r\n              onChange={(e) => setPost(e.target.value)}\r\n              cols=\"60\"\r\n              rows=\"5\"\r\n            ></textarea>\r\n          </label>\r\n          <br />\r\n          <button onClick={handlePost}>Post</button>\r\n          <div>\r\n            <br />\r\n            <br />\r\n            <div>\r\n              <span>Comments (showing 1-1)</span>\r\n              <div>\r\n                <div className={styles.divPostHeading}>\r\n                  <p>\r\n                    message 1:by <span style={{ color: \"blue\" }}> Hkg</span>{\" \"}\r\n                  </p>\r\n                </div>\r\n                <p>{data.comment}</p>\r\n              </div>\r\n              <div>\r\n                <div className={styles.divPostHeading}>\r\n                  <p>\r\n                    message 1:by <span style={{ color: \"blue\" }}> Hkg</span>{\" \"}\r\n                  </p>\r\n                </div>\r\n                <p>{comments.comment}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DiscussionArea;\r\n","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\pages\\Trivia\\Trivia.jsx",["342","343","344"],"import React, { useState } from \"react\";\r\nimport styles from \"./Trivia.module.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getQuesData } from \"../../redux/Trivia/action\";\r\nimport TriviaQuestuion from \"./TriviaQuestuion\";\r\nimport axios from \"axios\";\r\nimport { Search } from \"../../components/searchBar/Search\";\r\nconst Trivia = () => {\r\n  const dispatch = useDispatch();\r\n  const data = useSelector((state) => state.trivia.question);\r\n  const isLoading = useSelector((state) => state.trivia.isLoading);\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n  React.useEffect(() => {\r\n    dispatch(getQuesData());\r\n  }, []);\r\n  React.useEffect(() => {\r\n    getImages();\r\n  }, [currentIndex]);\r\n  const [images, setImages] = React.useState(\"\");\r\n  const [prevImages, setPrevImages] = React.useState(\"\");\r\n  const getImages = () => {\r\n    return axios\r\n      .get(\r\n        \"https://www.googleapis.com/books/v1/volumes?q=fantasy&AIzaSyB8wyhDZVXdQlGutVzyqQfsCA9dVhe0b4I\"\r\n      )\r\n      .then((res) => {\r\n        console.log(\r\n          \"goglebook\",\r\n          res.data.items[currentIndex].volumeInfo.imageLinks.smallThumbnail\r\n        );\r\n        setImages(\r\n          res.data.items[currentIndex].volumeInfo.imageLinks.smallThumbnail\r\n        );\r\n        setPrevImages(\r\n          res.data.items[currentIndex - 1].volumeInfo.imageLinks.smallThumbnail\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"err in google book api\");\r\n      });\r\n  };\r\n  const [recentQues, setRecentQues] = useState([]);\r\n\r\n  const [score, setScore] = useState(0);\r\n  const [correct, setCorrect] = useState(\"\");\r\n  const [quesans, setQuesAns] = React.useState(0);\r\n  const [skipped, setSkipped] = React.useState(0);\r\n  const handleAnswer = (answer) => {\r\n    setCurrentIndex((prev) => prev + 1);\r\n    if (answer === data[currentIndex].correct_answer) {\r\n      setScore((prev) => prev + 1);\r\n      setCorrect(true);\r\n      setQuesAns((prev) => prev + 1);\r\n    }\r\n    if (answer !== data[currentIndex].correct_answer) {\r\n      setCorrect(false);\r\n      setQuesAns((prev) => prev + 1);\r\n    }\r\n    setRecentQues([data[currentIndex]]);\r\n  };\r\n  const handleSkip = (one) => {\r\n    setCurrentIndex((prev) => prev + 1);\r\n    setSkipped((prev) => prev + 1);\r\n  };\r\n  return (\r\n    <div>\r\n      <div className={styles.outer}>\r\n        <div className={styles.outer__left}>\r\n          <p className={styles.outer__left__heading}>Never-Ending Book Quiz</p>\r\n          <div className={styles.outer__left__recentQues}>\r\n            <p\r\n              style={{\r\n                marginBottom: \"5px\",\r\n                fontSize: \"13px\",\r\n                fontWeight: \"700\",\r\n              }}\r\n            >\r\n              LAST ANWER\r\n            </p>\r\n            <hr />\r\n            <div className={styles.outer__left__recentQues1}>\r\n              {recentQues.length > 0 ? (\r\n                <div>\r\n                  <p style={{ fontSize: \"15px\" }}>{recentQues[0].question}</p>\r\n                  <img\r\n                    src={prevImages}\r\n                    alt=\"images\"\r\n                    width=\"70px\"\r\n                    height=\"70px\"\r\n                  />\r\n                  <h3>Answer Res</h3>\r\n                  <p>\r\n                    {correct === true ? (\r\n                      <p style={{ color: \"green\", fontSize: \"19px\" }}>\r\n                        \"You got it Right!\"\r\n                      </p>\r\n                    ) : (\r\n                      <p style={{ color: \"red\", fontSize: \"19px\" }}>\r\n                        {\" \"}\r\n                        \"You got it Wrong!\"\r\n                      </p>\r\n                    )}\r\n                  </p>\r\n                  <p style={{ color: \"green\" }}>\r\n                    a.{recentQues[0].correct_answer}\r\n                  </p>\r\n                  <p style={{ color: \"red\" }}>\r\n                    b.{recentQues[0].incorrect_answers[0]}\r\n                  </p>\r\n                  <p style={{ color: \"red\" }}>\r\n                    c.{recentQues[0].incorrect_answers[1]}\r\n                  </p>\r\n                  <p style={{ color: \"red\" }}>\r\n                    d.{recentQues[0].incorrect_answers[2]}\r\n                  </p>\r\n                </div>\r\n              ) : (\r\n                <div>\r\n                  <p className={styles.outer__left__loadingParts}>\r\n                    Answer the question to the right to see the results!\r\n                  </p>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n          <div className={styles.myStats}>\r\n            <p\r\n              style={{\r\n                marginBottom: \"5px\",\r\n                fontSize: \"13px\",\r\n                fontWeight: \"700\",\r\n              }}\r\n            >\r\n              MY STATS\r\n            </p>\r\n            <hr />\r\n            <p className={styles.static}>question answerd:{quesans}</p>\r\n            <p className={styles.static}>correct:{score}</p>\r\n            <p className={styles.static}>skipped:{skipped}</p>\r\n          </div>\r\n        </div>\r\n        <div className={styles.outer__right}>\r\n          <div className={styles.outer__right__search}>\r\n            <Link to=\"/trivia\">\r\n              <p>All Trivia</p>\r\n            </Link>\r\n            |\r\n            <Link to=\"/booksection\">\r\n              <p>My Books</p>\r\n            </Link>\r\n            |\r\n            <Link to=\"/homePage\">\r\n              <p>Browse</p>\r\n            </Link>\r\n            <input type=\"text\" placeholder=\"Find the books.....\" />\r\n            <button>Search</button>\r\n          </div>\r\n          <div className={styles.outer__right__quiz__heading}>\r\n            <p style={{ fontWeight: \"700\", fontSize: \"13px\" }}>\r\n              TRIVIA QUESTIONS\r\n            </p>\r\n            <Link to=\"/addQuestion\">\r\n              <p style={{ fontSize: \"10px\" }}>Add a questions</p>\r\n            </Link>\r\n          </div>\r\n          <div className={styles.outer__right__quiz}>\r\n            {isLoading ? (\r\n              <div>\r\n                <h1>Quiz is Loading guys.......</h1>\r\n              </div>\r\n            ) : (\r\n              <TriviaQuestuion\r\n                data={data[currentIndex]}\r\n                handleAnswer={handleAnswer}\r\n                handleSkip={handleSkip}\r\n                images={images}\r\n              />\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { Trivia };\r\n","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\pages\\Quotes\\Quotes.jsx",["345"],"import React from \"react\";\r\nimport styles from \"./Quotes.module.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getData } from \"../../redux/Quotes/action\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { add } from \"../../redux/Quotes/actionadd\";\r\nconst Quotes = () => {\r\n  const [author, setAuthor] = React.useState(\"\");\r\n  const data = useSelector((state) => state.quotes.data);\r\n  const isLoading = useSelector((state) => state.quotes.isLoading);\r\n\r\n  const dispatch = useDispatch();\r\n  React.useEffect(() => {\r\n    dispatch(\r\n      getData({\r\n        _page: 1,\r\n        _limit: 8,\r\n      })\r\n    );\r\n  }, []);\r\n  const handleSearch = () => {\r\n    dispatch(\r\n      getData({\r\n        _page: 1,\r\n        _limit: 5,\r\n        q: author,\r\n      })\r\n    );\r\n    setAuthor(\"\");\r\n  };\r\n  const handleUsers = (e, _page = 1, _limit = 8) => {\r\n    dispatch(\r\n      getData({\r\n        _page,\r\n        _limit,\r\n      })\r\n    );\r\n  };\r\n  const handleLikes = (e) => {\r\n    const newData = data.find((ele) => ele.id === e);\r\n    dispatch(add(newData));\r\n  };\r\n  return (\r\n    <div className={styles.cont}>\r\n      <div className={styles.cont__left}>\r\n        <p style={{ fontWeight: \"700\", fontSize: \"22px\" }}>Popular Quotes</p>\r\n        <input\r\n          style={{\r\n            width: \"64%\",\r\n            height: \"20px\",\r\n            marginLeft: \"10px\",\r\n            marginTop: \"13px\",\r\n          }}\r\n          type=\"text\"\r\n          value={author}\r\n          onChange={(e) => setAuthor(e.target.value)}\r\n          placeholder=\"Find the quotes by author\"\r\n        />\r\n        <button\r\n          style={{ width: \"80px\", height: \"25px\", cursor: \"pointer\" }}\r\n          onClick={handleSearch}\r\n        >\r\n          Search\r\n        </button>\r\n        <hr\r\n          style={{\r\n            width: \"95%\",\r\n            marginLeft: \"12px\",\r\n            marginTop: \"15px\",\r\n            color: \"lightgray\",\r\n            backgroundColor: \"black\",\r\n          }}\r\n        />\r\n        <p style={{ marginTop: \"10px\", marginLeft: \"12px\", fontSize: \"14px\" }}>\r\n          Quotes popular among Goodreads members\r\n        </p>\r\n        {isLoading ? (\r\n          <div style={{ marginLeft: \"12px\" }}>great things is coming...</div>\r\n        ) : (\r\n          <div>\r\n            {data.map((ele) => (\r\n              <div className={styles.quotesBox} key={ele.id}>\r\n                <div className={styles.quotesBoxImg}>\r\n                  <img src={ele.img} alt=\"img\" />\r\n                </div>\r\n                <div style={{ width: \"80%\" }}>\r\n                  <p>\"{ele.quote}\"</p>\r\n                  <p style={{ fontWeight: \"700\", marginTop: \"10px\" }}>\r\n                    -{ele.author}\r\n                  </p>\r\n                  <Link>\r\n                    <p\r\n                      style={{\r\n                        marginLeft: \"85%\",\r\n                        fontSize: \"13px\",\r\n                        color: \"#12645E\",\r\n                      }}\r\n                    >\r\n                      {Math.floor(Math.random() * 1001)} likes\r\n                    </p>\r\n                  </Link>\r\n                </div>\r\n                <div>\r\n                  <button\r\n                    onClick={() => handleLikes(ele.id)}\r\n                    style={{\r\n                      width: \"35px\",\r\n                      height: \"20px\",\r\n                      cursor: \"pointer\",\r\n                      title: \"add to my quotes\",\r\n                      marginLeft: \"15px\",\r\n                      fontSize: \"11px\",\r\n                    }}\r\n                  >\r\n                    ADD\r\n                  </button>\r\n                  <span className={styles.span}>add to my quotes</span>\r\n                </div>\r\n              </div>\r\n            ))}\r\n            <div style={{ marginLeft: \"78%\" }}>\r\n              {new Array(10).fill(0).map((_, index) => (\r\n                <button\r\n                  onClick={(e) => handleUsers(e, index + 1)}\r\n                  style={{ cursor: \"pointer\" }}\r\n                >\r\n                  {index + 1}\r\n                </button>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div className={styles.cont__right}>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"space-evenly\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Link to=\"/myQuotes\">\r\n            {\" \"}\r\n            <p style={{ fontSize: \"12px\" }}>My Quotes</p>\r\n          </Link>\r\n          <p>|</p>\r\n          <Link to=\"/addQuotes\">\r\n            <p style={{ fontSize: \"12px\" }}>Add a Quote</p>\r\n          </Link>\r\n        </div>\r\n        <div>\r\n          <p\r\n            style={{\r\n              fontWeight: \"700\",\r\n              fontSize: \"13px\",\r\n              marginTop: \"20px\",\r\n              marginLeft: \"10px\",\r\n            }}\r\n          >\r\n            BROWSE BY TAG\r\n          </p>\r\n          <hr style={{ width: \"90%\", marginLeft: \"10px\", marginTop: \"3px\" }} />\r\n          <Link>\r\n            <p\r\n              style={{ fontSize: \"10px\", marginLeft: \"10px\", marginTop: \"9px\" }}\r\n            >\r\n              Love Quotes <span style={{ color: \"grey\" }}>81.5k</span>\r\n            </p>\r\n          </Link>\r\n          <Link>\r\n            <p\r\n              style={{ fontSize: \"10px\", marginLeft: \"10px\", marginTop: \"9px\" }}\r\n            >\r\n              Buddha Quotes<span style={{ color: \"grey\" }}>83k</span>\r\n            </p>\r\n          </Link>\r\n          <Link>\r\n            <p\r\n              style={{ fontSize: \"10px\", marginLeft: \"10px\", marginTop: \"9px\" }}\r\n            >\r\n              Peaky Blinders Quotes <span style={{ color: \"grey\" }}>97.5k</span>\r\n            </p>\r\n          </Link>\r\n          <Link>\r\n            <p\r\n              style={{ fontSize: \"10px\", marginLeft: \"10px\", marginTop: \"9px\" }}\r\n            >\r\n              Truth Quotes <span style={{ color: \"grey\" }}>12.5k</span>\r\n            </p>\r\n          </Link>\r\n          <Link>\r\n            <p\r\n              style={{ fontSize: \"10px\", marginLeft: \"10px\", marginTop: \"9px\" }}\r\n            >\r\n              Demon Quotes <span style={{ color: \"grey\" }}>811.5k</span>\r\n            </p>\r\n          </Link>\r\n          <Link>\r\n            <p\r\n              style={{ fontSize: \"10px\", marginLeft: \"10px\", marginTop: \"9px\" }}\r\n            >\r\n              God Quotes <span style={{ color: \"grey\" }}>911.5k</span>\r\n            </p>\r\n          </Link>\r\n          <Link>\r\n            <p\r\n              style={{ fontSize: \"10px\", marginLeft: \"10px\", marginTop: \"9px\" }}\r\n            >\r\n              Humor Quotes <span style={{ color: \"grey\" }}>811.5k</span>\r\n            </p>\r\n          </Link>\r\n          <Link>\r\n            <p\r\n              style={{ fontSize: \"10px\", marginLeft: \"10px\", marginTop: \"9px\" }}\r\n            >\r\n              Motivational Quotes <span style={{ color: \"grey\" }}>71.5k</span>\r\n            </p>\r\n          </Link>\r\n          <Link>\r\n            <p\r\n              style={{ fontSize: \"10px\", marginLeft: \"10px\", marginTop: \"9px\" }}\r\n            >\r\n              Death Quotes <span style={{ color: \"grey\" }}>8121.5k</span>\r\n            </p>\r\n          </Link>\r\n          <Link>\r\n            <p\r\n              style={{ fontSize: \"10px\", marginLeft: \"10px\", marginTop: \"9px\" }}\r\n            >\r\n              Hope Quotes <span style={{ color: \"grey\" }}>5121.5k</span>\r\n            </p>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { Quotes };\r\n","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\pages\\Discussion\\DiscussionPost.jsx",["346","347","348"],"import React from \"react\";\r\nimport styles from \"./DiscussionPost.module.css\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { getPostDis, getDataPost } from \"../../redux/Discussion/action\";\r\nconst DiscussionPost = () => {\r\n  const dispatch = useDispatch();\r\n  const [details, setDetails] = React.useState({\r\n    bookname: \"\",\r\n    topic: \"\",\r\n    comment: \"\",\r\n    addBook: \"\",\r\n    author: \"\",\r\n  });\r\n  const handleAdd = (e) => {\r\n    const { name, value } = e.target;\r\n    setDetails({ ...details, [name]: value });\r\n  };\r\n  const handleSubmit = () => {\r\n    const payload = {\r\n      bookname,\r\n      topic,\r\n      comment,\r\n      addBook,\r\n      author,\r\n    };\r\n    dispatch(getPostDis(payload));\r\n    setDetails({\r\n      ...details,\r\n      bookname: \"\",\r\n      author: \"\",\r\n      topic: \"\",\r\n      comment: \"\",\r\n      addBook: \"\",\r\n    });\r\n  };\r\n  const { bookname, addBook, author, topic, comment } = details;\r\n  return (\r\n    <div>\r\n      <div className={styles.cont}>\r\n        <p className={styles.p1}>Post a New Discussion Topic</p>\r\n        <label htmlFor=\"\" className={styles.p2}>\r\n          Book this topic is about{\" \"}\r\n          <input\r\n            className={styles.input1}\r\n            type=\"text\"\r\n            placeholder=\"Start typing the new book name....\"\r\n            name=\"bookname\"\r\n            value={bookname}\r\n            onChange={handleAdd}\r\n          />\r\n        </label>\r\n        <br />\r\n        <br />\r\n        <label className={styles.p3}>\r\n          topic\r\n          <br />\r\n          <input\r\n            className={styles.input2}\r\n            type=\"text\"\r\n            name=\"topic\"\r\n            value={topic}\r\n            onChange={handleAdd}\r\n          />\r\n        </label>\r\n        <br />\r\n        <br />\r\n        <input type=\"checkbox\" />{\" \"}\r\n        <label htmlFor=\"\" className={styles.p2}>\r\n          this is a discussion question\r\n        </label>\r\n        <br />\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <p className={styles.p3}>commet</p>\r\n          <Link>\r\n            <p>add book/author</p>\r\n          </Link>\r\n        </div>\r\n        <textarea\r\n          name=\"\"\r\n          cols=\"58\"\r\n          rows=\"7\"\r\n          style={{ marginTop: \"-15px\" }}\r\n          name=\"comment\"\r\n          value={comment}\r\n          onChange={handleAdd}\r\n        ></textarea>\r\n        <br />\r\n        <Link to=\"/discussion/area\">\r\n          <button onClick={handleSubmit}>Post</button>\r\n        </Link>\r\n        <br />\r\n        <br />\r\n        <Link>\r\n          <p>cancel</p>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { DiscussionPost };\r\n","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\pages\\allOption\\Group\\Group.jsx",["349","350"],"import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { GetGroupData } from \"../../../redux/allOptions/action\";\r\nimport style from \"./Group.module.css\";\r\nimport {v4 as uuid} from \"uuid\"\r\n\r\nconst init =[{\r\n    name:\"manish\",\r\n    topic:\"I love graphic novels. How do you find working as a writer in this format? What is the biggest challenge over a novel?\",\r\n    message:\" Writing graphic novels is much easier for me on every level. I visualize my novels as I write them and I love writing dialogue, both of which naturally lend themselves to the graphic novel format.\",\r\n    replay:[{r:\"hello manish\"},{r:\"hello manish\"}],\r\n    id:\"1\"\r\n},\r\n{\r\n    name:\"mandar\",\r\n    topic:\"What books are on your summer reading list this year?\",\r\n    message:\" suggest me some good books\",\r\n    replay:[{r:\"hello manish\"},{r:\"hello manish\"}],\r\n    id:\"2\"\r\n}]\r\n\r\n\r\nexport const Group = () => {\r\n  let { q, g } = useParams();\r\n  const[message,setMsg] = React.useState(\"\")\r\n  const[topic,setTopic] = React.useState(\"\")\r\n  const [chat,setChat] = React.useState(init)\r\n  const [num, setNum] = React.useState(4);\r\n  const dispatch = useDispatch();\r\n  const data = useSelector((state) => state.group_reducer.group_data);\r\n  React.useEffect(() => {\r\n    dispatch(GetGroupData(q, num));\r\n  }, []);\r\n\r\n  const hanldeAddChat =(name)=>{\r\n        const payload={\r\n            name:name,\r\n            topic:topic,\r\n            message:message,\r\n            id:uuid()\r\n        }\r\n        setChat([...chat,payload])\r\n        setMsg(\"\")\r\n        setTopic(\"\")\r\n  }\r\n\r\n  \r\n  const [replay,setReplay] = React.useState(\"\")\r\n\r\n  const [replayMsg ,SetReplayMsg] = React.useState([])\r\n  const hanldeAddReplay =(id)=>{\r\n      const payload = [id,replay]\r\n      SetReplayMsg([...replayMsg,payload])\r\n    }\r\n    \r\n    console.log(replayMsg)\r\n  return (\r\n    <div>\r\n      <div className={style.box}>\r\n        <img src={data[0]?.volumeInfo.imageLinks.smallThumbnail} alt=\"alt\" />\r\n        <h1 className={style.groupName}>{g}</h1>\r\n        <br/>\r\n        <p>\r\n          When anyone on the TODAY team's looking for a book recommendation,\r\n          there's only one person to turn to: Jenna Bush Hager.<br/><br/> Jenna will\r\n          select a book and as you read along, we'll be posting updates right\r\n          here with thought-provoking conversation starters. We hope you'll\r\n          engage with the rest of the #ReadWithJenna community to make this book\r\n          club your own.\r\n        </p>\r\n        <br/>\r\n        <p style={{opacity:\"0.3\"}}>tags -- book-club, book-clubs, book-group, fiction, jenna-bush-hager, literature, today, and women-authors</p>\r\n        <br/>\r\n        <p style={{opacity:\"0.3\"}}>group type -- This is a public group. Anyone can join and invite others to join.</p>\r\n        <br />\r\n        <h2 style={{opacity:\"0.5\"}}>#Read with the group books</h2>\r\n        <div className={style.bookBox}>\r\n        {data?.map((item) => {\r\n            return (\r\n                <>\r\n              <div>\r\n                <img\r\n                  src={\r\n                      item.volumeInfo.imageLinks.smallThumbnail === undefined\r\n                      ? \"https://via.placeholder.com/150\"\r\n                      : item.volumeInfo.imageLinks.smallThumbnail\r\n                    }\r\n                    alt=\"\"\r\n                    />\r\n              </div>\r\n            </>\r\n          );\r\n        })}\r\n      </div>\r\n        <button>Join Group</button>\r\n      </div>     \r\n      <div className={style.box1}>\r\n          <p style={{borderBottom:\"1px solid grey\"}}>Announcement</p>\r\n          <div className={style.aBox}>\r\n            <p>Book Club Q&A with Author</p>\r\n            <p style={{fontSize:\"13px\",opacity:\"0.3\"}}>By Bryan · 7 posts <h style={{color:\"red\"}}>(7 new) </h>· 158 views\r\n            <span style={{marginLeft:\"60px\"}}>last updated Feb 02, 2021 06:00PM</span></p>\r\n          </div>\r\n          <div className={style.aBox}>\r\n            <p>Our December book pick is The Bluest Eye by Toni Morrison</p>\r\n            <p style={{fontSize:\"13px\",opacity:\"0.3\"}}>By Bryan · 7 posts <h style={{color:\"red\"}}>(7 new) </h>· 158 views\r\n            <span style={{marginLeft:\"60px\"}}>last updated Feb 02, 2021 06:00PM</span></p>\r\n          </div>\r\n          <div className={style.aBox}>\r\n            <p>Our January 2021 book pick is Black Buck by Mateo Askaripour</p>\r\n            <p style={{fontSize:\"13px\",opacity:\"0.3\"}}>By Bryan · 7 posts <h style={{color:\"red\"}}>(7 new) </h>· 158 views\r\n            <span style={{marginLeft:\"60px\"}}>last updated Feb 02, 2021 06:00PM</span></p>\r\n          </div>\r\n          <div className={style.aBox}>\r\n            <p>Our July book club pick is Evvie Drake Starts Over</p>\r\n            <p style={{fontSize:\"13px\",opacity:\"0.3\"}}>By Bryan · 7 posts <h style={{color:\"red\"}}>(7 new) </h>· 158 views\r\n            <span style={{marginLeft:\"60px\"}}>last updated Feb 02, 2021 06:00PM</span></p>\r\n          </div>\r\n          <div className={style.aBox}>\r\n            <p>Share your thoughts about Black Buck</p>\r\n            <p style={{fontSize:\"13px\",opacity:\"0.3\"}}>By Bryan · 7 posts <h style={{color:\"red\"}}>(7 new) </h>· 158 views\r\n            <span style={{marginLeft:\"60px\"}}>last updated Feb 02, 2021 06:00PM</span></p>\r\n          </div>\r\n      </div>\r\n      <h1 style={{ textAlign: \"center\" }}>Group Discussion</h1>\r\n      <div className={style.chatContainer}>\r\n      {\r\n          chat.map(item=>{\r\n            return <>\r\n          \r\n              <div key={item.id} className={style.chat}>\r\n            <h2>{item.topic}</h2>\r\n        <p className={style.message}><h style={{opacity:\"0.5\",color:\"#4e5545\"}}>{item.name}</h> <h style={{marginLeft:\"25px\"}}>{item.message}</h></p>\r\n            <div className={style.replaySection}>\r\n                {\r\n                    replayMsg.map(i=> item.id ===i[0]? \r\n                         <p style={{marginTop:\"30px\"}}> {i[1]} <h style={{opacity:\"0.5\",color:\"#4e5545\",marginLeft:\"20px\",fontSize:\"10px\"}}>replay by {item.name}</h></p>\r\n                    :null)\r\n                    }\r\n            </div>\r\n            <input className={style.replayInput} onChange={(e)=>setReplay(e.target.value)} type=\"text\"  />\r\n            <button onClick={()=>hanldeAddReplay(item.id)} style={{marginLeft:\"10px\", marginBottom: \"10px\",marginTop:\"20px\",}} className={style.replay}>comment</button>\r\n        </div>\r\n            </>})\r\n      }\r\n      </div>\r\n      <div className={style.chatInputBox}>\r\n        <input className={style.sendInput}  value={topic} onChange={(e)=>setTopic(e.target.value)} type=\"text\" placeholder=\"topic\" />\r\n        <input className={style.sendInput}  value={message} onChange={(e)=>setMsg(e.target.value)} type=\"text\" placeholder=\"discussion\" />\r\n        <button onClick={()=>hanldeAddChat(\"saravana\")} className={style.send} >Send</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\components\\showBookCard\\ShowBookCard.jsx",["351"],"import React from 'react'\r\nimport { shallowEqual, useSelector, useDispatch } from 'react-redux'\r\nimport styles from './ShowBookCard.module.css'\r\nimport ReactReadMoreReadLess from \"react-read-more-read-less\";\r\nimport { bookSearchPerformerByID } from '../../redux/search/action';\r\nimport { useParams } from 'react-router-dom';\r\nimport {GoGraph} from 'react-icons/go'\r\nimport StarRatings from 'react-star-ratings';\r\nimport { ReadButton } from '../readButton/ReadButton'\r\n\r\nconst ShowBookCard = () => {\r\n    const {bookId} = useParams()\r\n    const dispatch = useDispatch()\r\n    const {selectedBook} = useSelector(state => state.book, shallowEqual)\r\n\r\n    React.useEffect(() => {\r\n        dispatch(bookSearchPerformerByID(bookId))\r\n    }, [bookId])\r\n\r\n    if(selectedBook !== null){\r\n        const {volumeInfo} = selectedBook\r\n        const {title, authors, description, publisher, publishedDate, pageCount, averageRating, ratingsCount, imageLinks, infoLink} = volumeInfo\r\n        const src = imageLinks === undefined ? \"https://via.placeholder.com/150x220.png?text=No+image\" : imageLinks.smallThumbnail\r\n\r\n        const handlePage = () => {\r\n            window.open(infoLink, \"_blank\")\r\n        }\r\n\r\n        return (\r\n            <div className = {styles.container}>\r\n                <div className = {styles.left}>\r\n                    <img src = {src} alt = \"img\"></img>\r\n                    <ReadButton selectedBook = {selectedBook}></ReadButton>\r\n                </div>\r\n                <div className = {styles.right}>\r\n                    <h2>{title}</h2>\r\n                    <strong>by {authors?.map((item, i) => <span key = {i}>{item}</span>)}</strong>\r\n                    <div className = {styles.rating}>\r\n                        <StarRatings\r\n                            rating={averageRating || 0}\r\n                            starDimension=\"14px\"\r\n                            starSpacing=\"1px\"\r\n                            starRatedColor=\"#FA604A\"\r\n                        />\r\n                        {` ${averageRating || 0}`} ▪ <GoGraph className = {styles.icon}></GoGraph> Rating details ▪ {ratingsCount || \"No ratings\"} ratings\r\n                    </div>\r\n                    <div  className = {styles.description}>\r\n                        <ReactReadMoreReadLess\r\n                            charLimit={200}\r\n                            readMoreText={\"more\"}\r\n                            readLessText={\"(less)\"}\r\n                            readMoreClassName=\"read-more-less--more\"\r\n                            readLessClassName=\"read-more-less--less\"\r\n                        >\r\n                            {description}\r\n                        </ReactReadMoreReadLess>\r\n                    </div>\r\n                    <div className = {styles.getBook}>\r\n                        <h5>GET A BOOK</h5>\r\n                        <button onClick = {handlePage}>Google Books</button>\r\n                    </div>\r\n                    <div className = {styles.moreDetails}>\r\n                        <div>{pageCount} pages</div>\r\n                        <div>{`Published ${publishedDate} by ${publisher}`}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    return null\r\n}\r\n\r\nexport {ShowBookCard}\r\n","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\components\\Footer\\Footer.jsx",[],"C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\components\\Navbar\\Navbar.jsx",["352"],"import React from \"react\";\r\nimport styles from \"./Navbar.module.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Search } from \"../searchBar/Search\";\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <div className={styles.navbar__cont}>\r\n      <div className={styles.navbar__left}>\r\n        <div className={styles.menu__logo}>\r\n          <img src=\"https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Fupload.wikimedia.org%2Fwikipedia%2Fcommons%2Fthumb%2F1%2F1a%2FGoodreads_logo.svg%2F800px-Goodreads_logo.svg.png&f=1&nofb=1\" />\r\n        </div>\r\n        <div className={styles.menu}>\r\n          <Link to=\"/\" className={styles.menu__link}>\r\n            Home\r\n          </Link>\r\n        </div>\r\n        <div className={styles.menu}>\r\n          <Link to=\"/mybooks\" className={styles.menu__link}>\r\n            My Books\r\n          </Link>\r\n        </div>\r\n        <div className={styles.menu}>\r\n          <Link to=\"#\" className={styles.menu__link}>\r\n            Browse <i class=\"fas fa-caret-down\"></i>\r\n          </Link>\r\n          <div className={styles.dropdown_content}>\r\n            <Link to=\"/genres\" className={styles.dropdown_link}>\r\n              All Genre\r\n            </Link>\r\n            <br />\r\n            <Link to=\"#\" className={styles.dropdown_link}>\r\n              Mystery\r\n            </Link>\r\n            <br />\r\n            <Link to=\"#\" className={styles.dropdown_link}>\r\n              Thriller\r\n            </Link>\r\n            <br />\r\n            <Link to=\"#\" className={styles.dropdown_link}>\r\n              Comic\r\n            </Link>\r\n            <br />\r\n            <Link to=\"#\" className={styles.dropdown_link}>\r\n              Children's\r\n            </Link>\r\n          </div>\r\n        </div>\r\n        <div className={styles.menu}>\r\n          <Link to=\"#\" className={styles.menu__link}>\r\n            Community <i class=\"fas fa-caret-down\"></i>\r\n          </Link>\r\n          <div className={styles.dropdown_content}>\r\n            <Link to=\"#\" className={styles.dropdown_link}>\r\n              Discussions\r\n            </Link>\r\n            <br />\r\n            <Link to=\"/people\" className={styles.dropdown_link}>\r\n              People\r\n            </Link>\r\n            <br />\r\n            <Link to=\"/trivia\" className={styles.dropdown_link}>\r\n              Trivia\r\n            </Link>\r\n            <br />\r\n            <Link to=\"/quotes\" className={styles.dropdown_link}>\r\n              Quotes\r\n            </Link>\r\n            <br />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className={styles.flexgrow1}></div>\r\n      <div>\r\n        <Search></Search>\r\n      </div>\r\n      <div className={styles.flexgrow2}></div>\r\n      <div className={styles.navbar__right}>\r\n        <div className={styles.menu__icon}>\r\n          <Link to=\"#\">\r\n            <i class=\"fas fa-bell\"></i>\r\n          </Link>\r\n        </div>\r\n        <div className={styles.menu__icon}>\r\n          <Link to=\"/chat\">\r\n            <i class=\"fas fa-comments\"></i>\r\n          </Link>\r\n        </div>\r\n        <div className={styles.menu__icon}>\r\n          <Link to=\"#\">\r\n            <i class=\"fas fa-envelope\"></i>\r\n          </Link>\r\n        </div>\r\n        <div className={styles.menu__icon}>\r\n          <Link to=\"/group\">\r\n            <i class=\"fas fa-users\"></i>\r\n          </Link>\r\n        </div>\r\n        <div className={styles.menu__icon}>\r\n          <Link to=\"#\">\r\n            <i class=\"fas fa-user\"></i>\r\n          </Link>\r\n          <div className={styles.dropdown_content}>\r\n            <Link to=\"#\" className={styles.dropdown_link}>\r\n              Name\r\n            </Link>\r\n            <br />\r\n            <Link to=\"#\" className={styles.dropdown_link}>\r\n              Profile\r\n            </Link>\r\n            <br />\r\n            <Link to=\"#\" className={styles.dropdown_link}>\r\n              Friends\r\n            </Link>\r\n            <br />\r\n            <Link to=\"#\" className={styles.dropdown_link}>\r\n              Discussions\r\n            </Link>\r\n            <br />\r\n            <Link to=\"#\" className={styles.dropdown_link}>\r\n              Favourites\r\n            </Link>\r\n            <br />\r\n            <Link to=\"#\" className={styles.dropdown_link}>\r\n              Quotes\r\n            </Link>\r\n            <br />\r\n            <Link to=\"#\" className={styles.dropdown_link}>\r\n              Sign Out\r\n            </Link>\r\n            <br />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { Navbar };\r\n","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\pages\\Home\\Home.jsx",["353","354","355","356"],"import React from 'react'\r\nimport { Post } from '../../components/Post/Post'\r\nimport styles from \"./Home.module.css\"\r\nimport {useSelector, useDispatch, shallowEqual} from \"react-redux\"\r\nimport { updatePosts } from '../../redux/Post/action';\r\nimport { getPosts } from '../../redux/Post/action'\r\nimport { getBooks } from '../../redux/myBooks/action'\r\nimport { Link } from 'react-router-dom';\r\nimport { CurrentlyReading } from '../../components/CurrentlyReading/CurrentlyReading';\r\nimport { WantToRead } from '../../components/WantToRead/WantToRead';\r\n\r\n\r\nconst Home = () => {\r\n\r\n    const posts = useSelector(state => state.posts.posts);\r\n    const {books, wantToRead, currentlyReading, read} = useSelector(state => state.myBooks, shallowEqual)\r\n    const dispatch = useDispatch();\r\n    const [wantToReadData, setWantToReadData] = React.useState([]);\r\n    const [currentlyReadingData, setCurrentlyReadingData] = React.useState([]);\r\n\r\n    React.useEffect(()=> {\r\n        dispatch(getPosts());\r\n        dispatch(getBooks());\r\n        // getCurrentlyReading();\r\n        // getWantToRead();\r\n    }, [dispatch])\r\n\r\n    React.useEffect(() => {\r\n        getCurrentlyReading();\r\n        getWantToRead();\r\n    }, [books])\r\n\r\n\r\n    const getWantToRead = () => {\r\n        if(books[0] !== undefined){\r\n            const tempData = books[0].filter(item => {\r\n                for(let i in wantToRead[0][0]){\r\n                    if(wantToRead[0][0][i].id === item.id){\r\n                        return item;\r\n                    }\r\n                }\r\n            })\r\n            setWantToReadData(tempData);\r\n        }\r\n    }\r\n\r\n    const getCurrentlyReading = () => {\r\n        if(books[0] !== undefined){\r\n            const tempData = books[0].filter(item => {\r\n                for(let i in currentlyReading[0][0]){\r\n                    if(currentlyReading[0][0][i].id === item.id){\r\n                        return item;\r\n                    }\r\n                }\r\n            })\r\n            setCurrentlyReadingData(tempData);\r\n        }\r\n    }\r\n\r\n \r\n\r\n    // React.useEffect(() => {\r\n        \r\n    // }, [])\r\n\r\n\r\n\r\n    return (\r\n        <div className={styles.home__cont}>\r\n            <div className={styles.home__left}>\r\n                <h4>CURRENTLY READING</h4>\r\n                {        \r\n                    currentlyReadingData?.map(item => \r\n                        <CurrentlyReading key={item.id} \r\n                        title={item.volumeInfo.title} \r\n                        author={item.volumeInfo.authors[0]}\r\n                        image={item.volumeInfo.imageLinks !== undefined ? item.volumeInfo.imageLinks.smallThumbnail: \"https://via.placeholder.com/100x100\"}/>\r\n                    )\r\n                }\r\n                <hr className={styles.horizontal_rule}/>\r\n                <h4>WANT TO READ</h4>\r\n                <div className={styles.want_to_read}>\r\n                {\r\n                    wantToReadData?.map(item => \r\n                        <WantToRead key={item.id} image={item.volumeInfo.imageLinks!== undefined ? item.volumeInfo.imageLinks.smallThumbnail : \"https://via.placeholder.com/100x100\"}/>\r\n                    )\r\n                }\r\n                </div>\r\n                <Link to=\"/mybooks\">View all books</Link>\r\n                <hr className={styles.horizontal_rule}/>\r\n                <div className={styles.bookshelves}>\r\n                    <h4>BOOKSHELF</h4>\r\n                    <div>\r\n                        <Link to=\"/mybooks\">{wantToReadData.length} Want to Read</Link>\r\n                    </div>\r\n                    <div>\r\n                        <Link to=\"/mybooks\">{currentlyReadingData.length} Currently Reading</Link>\r\n                    </div>\r\n                    <div>\r\n                        <Link to=\"/mybooks\">{read[0] !== undefined? read[0][0].length : \"-\"} Read</Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className={styles.home__mid}>\r\n                <h4>UPDATES</h4>\r\n                {\r\n                    posts[0]?.slice(0).reverse()?.map(item => \r\n                        <Post {...item} key={item.id}/>\r\n                        )\r\n                }\r\n            </div>\r\n            <div className={styles.home__right}>\r\n                <div className={styles.right__cards}>\r\n                    <h4 style={{marginBottom: \"10px\"}}>NEWS AND INTERVIEWS</h4>\r\n                    <h4 style={{marginBottom: \"10px\"}}>February's Most Anticipated Young Adult Books</h4>\r\n                    <img src=\"https://images.gr-assets.com/blogs/1611274039p7/2005.jpg\" alt=\"\"/>\r\n                    <p style={{fontSize:\"13px\", color:\"#8E8A81\"}}>31 likes . 2 comments</p>\r\n                </div>\r\n                <hr className={styles.horizontal_rule}/>\r\n                <div className={styles.right__cards}>\r\n                    <h4 style={{marginBottom: \"10px\"}}>RECOMMENDATIONS</h4>\r\n                    <h4 style={{marginBottom: \"10px\"}}>February's Most Anticipated Young Adult Books</h4>\r\n                    <img src=\"https://images.gr-assets.com/blogs/1611273545p7/2004.jpg\" alt=\"\"/>\r\n                    <p style={{fontSize:\"13px\", color:\"#8E8A81\"}}>31 likes . 2 comments</p>\r\n                </div>\r\n                <hr className={styles.horizontal_rule}/>\r\n                <div className={styles.footer}>\r\n                    <div className={styles.footer__cont}>\r\n                        <div className={styles.cont__left}>\r\n                            <h4 style={{margin: \"10px 0\"}}>COMPANY</h4>\r\n                            <p>About Us</p>\r\n                            <p>Career</p>\r\n                            <p>Terms</p>\r\n                            <p>Privacy</p>\r\n                            <p>Interest Based Ads</p>\r\n                            <p>Ad Prefernces</p>\r\n                            <p>Help</p>\r\n                        </div>\r\n                        <div className={styles.cont__right}>\r\n                            <h4 style={{margin: \"10px 0\"}}>WORK WITH US</h4>\r\n                            <p>Authors</p>\r\n                            <p>Advice</p>\r\n                            <p>Authord and Ad Blogs</p>\r\n                            <p>API</p>\r\n                        </div>\r\n                    </div>\r\n                    <hr className={styles.horizontal_rule}/>\r\n                    <h4 style={{margin: \"10px 0\"}}>CONNECT</h4>\r\n                    <div className={styles.socials}>\r\n                        <i class=\"fab fa-facebook-square\"></i>\r\n                        <i class=\"fab fa-twitter-square\"></i>\r\n                        <i class=\"fab fa-instagram-square\"></i>\r\n                        <i class=\"fab fa-linkedin\"></i>\r\n                    </div>\r\n                </div>\r\n                <hr className={styles.horizontal_rule}/>\r\n                <div style={{marginBottom: \"10px\"}}>\r\n                    <img src=\"https://s.gr-assets.com/assets/app/badge-ios-desktop-homepage-6ac7ae16eabce57f6c855361656a7540.svg\" alt=\"\"/>\r\n                    <img src=\"https://s.gr-assets.com/assets/app/badge-android-desktop-home-0f517cbae4d56c88a128d27a7bea1118.png\" alt=\"\"/>\r\n                </div>\r\n                <p style={{marginBottom: \"10px\"}}>Mobile Version</p>\r\n                <p style={{fontSize:\"13px\", color:\"#8E8A81\"}}>© 2021, GoodReadsClone</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport {Home}\r\n","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\pages\\Quotes\\MyQuotes.jsx",["357"],"import React from \"react\";\r\nimport styles from \"./Quotes.module.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nconst MyQuotes = () => {\r\n  const data = useSelector((state) => state.quotesLikes.data);\r\n  console.log(\"dataq\", data);\r\n  return (\r\n    <div className={styles.cont}>\r\n      <div className={styles.cont__left}>\r\n        <p style={{ fontWeight: \"700\", fontSize: \"22px\" }}>My Liked Quotes</p>\r\n        <hr\r\n          style={{\r\n            width: \"95%\",\r\n            marginLeft: \"12px\",\r\n            marginTop: \"15px\",\r\n            color: \"lightgray\",\r\n            backgroundColor: \"black\",\r\n          }}\r\n        />\r\n        <p style={{ marginTop: \"10px\", marginLeft: \"12px\", fontSize: \"14px\" }}>\r\n          Quotes that you liked most :)\r\n        </p>\r\n        <div>\r\n          {data.map((ele) => (\r\n            <div className={styles.quotesBox} key={ele.id}>\r\n              <div className={styles.quotesBoxImg}>\r\n                <img src={ele.img} alt=\"img\" />\r\n              </div>\r\n              <div style={{ width: \"80%\" }}>\r\n                <p>\"{ele.quote}\"</p>\r\n                <p style={{ fontWeight: \"700\", marginTop: \"10px\" }}>\r\n                  -{ele.author}\r\n                </p>\r\n                <Link>\r\n                  <p\r\n                    style={{\r\n                      marginLeft: \"85%\",\r\n                      fontSize: \"13px\",\r\n                      color: \"#12645E\",\r\n                    }}\r\n                  >\r\n                    {Math.floor(Math.random() * 1001)} likes\r\n                  </p>\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <div className={styles.cont__right}>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"space-evenly\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Link to=\"/quotes\">\r\n            {\" \"}\r\n            <p style={{ fontSize: \"12px\" }}>Quotes</p>\r\n          </Link>\r\n          <p>|</p>\r\n          <Link to=\"/addQuotes\">\r\n            <p style={{ fontSize: \"12px\" }}>Add a Quote</p>\r\n          </Link>\r\n        </div>\r\n        <div>\r\n          <p\r\n            style={{\r\n              fontWeight: \"700\",\r\n              fontSize: \"13px\",\r\n              marginTop: \"20px\",\r\n              marginLeft: \"10px\",\r\n            }}\r\n          >\r\n            BROWSE BY TAG\r\n          </p>\r\n          <hr style={{ width: \"90%\", marginLeft: \"10px\", marginTop: \"3px\" }} />\r\n          <Link>\r\n            <p\r\n              style={{ fontSize: \"10px\", marginLeft: \"10px\", marginTop: \"9px\" }}\r\n            >\r\n              Love Quotes <span style={{ color: \"grey\" }}>81.5k</span>\r\n            </p>\r\n          </Link>\r\n          <Link>\r\n            <p\r\n              style={{ fontSize: \"10px\", marginLeft: \"10px\", marginTop: \"9px\" }}\r\n            >\r\n              Buddha Quotes<span style={{ color: \"grey\" }}>83k</span>\r\n            </p>\r\n          </Link>\r\n          <Link>\r\n            <p\r\n              style={{ fontSize: \"10px\", marginLeft: \"10px\", marginTop: \"9px\" }}\r\n            >\r\n              Peaky Blinders Quotes <span style={{ color: \"grey\" }}>97.5k</span>\r\n            </p>\r\n          </Link>\r\n          <Link>\r\n            <p\r\n              style={{ fontSize: \"10px\", marginLeft: \"10px\", marginTop: \"9px\" }}\r\n            >\r\n              Truth Quotes <span style={{ color: \"grey\" }}>12.5k</span>\r\n            </p>\r\n          </Link>\r\n          <Link>\r\n            <p\r\n              style={{ fontSize: \"10px\", marginLeft: \"10px\", marginTop: \"9px\" }}\r\n            >\r\n              Demon Quotes <span style={{ color: \"grey\" }}>811.5k</span>\r\n            </p>\r\n          </Link>\r\n          <Link>\r\n            <p\r\n              style={{ fontSize: \"10px\", marginLeft: \"10px\", marginTop: \"9px\" }}\r\n            >\r\n              God Quotes <span style={{ color: \"grey\" }}>911.5k</span>\r\n            </p>\r\n          </Link>\r\n          <Link>\r\n            <p\r\n              style={{ fontSize: \"10px\", marginLeft: \"10px\", marginTop: \"9px\" }}\r\n            >\r\n              Humor Quotes <span style={{ color: \"grey\" }}>811.5k</span>\r\n            </p>\r\n          </Link>\r\n          <Link>\r\n            <p\r\n              style={{ fontSize: \"10px\", marginLeft: \"10px\", marginTop: \"9px\" }}\r\n            >\r\n              Motivational Quotes <span style={{ color: \"grey\" }}>71.5k</span>\r\n            </p>\r\n          </Link>\r\n          <Link>\r\n            <p\r\n              style={{ fontSize: \"10px\", marginLeft: \"10px\", marginTop: \"9px\" }}\r\n            >\r\n              Death Quotes <span style={{ color: \"grey\" }}>8121.5k</span>\r\n            </p>\r\n          </Link>\r\n          <Link>\r\n            <p\r\n              style={{ fontSize: \"10px\", marginLeft: \"10px\", marginTop: \"9px\" }}\r\n            >\r\n              Hope Quotes <span style={{ color: \"grey\" }}>5121.5k</span>\r\n            </p>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { MyQuotes };\r\n","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\pages\\MyBooks\\MyBooks.jsx",["358","359","360"],"C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\pages\\messaging\\chat\\Chat.jsx",[],"C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\pages\\Quotes\\AddQuotes.jsx",["361","362","363","364"],"import React from \"react\";\r\nimport { Link, Redirect, useHistory } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { add } from \"../../redux/Quotes/actionadd\";\r\nimport { postQuotes, getData } from \"../../redux/Quotes/action\";\r\nconst AddQuotes = () => {\r\n  const [quotes, setQuotes] = React.useState(\"\");\r\n  const [author, setAuthor] = React.useState(\"\");\r\n  const [search, setSearch] = React.useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const data = useSelector((state) => state.quotes.data);\r\n  console.log(\"daadda\", data);\r\n  const handleAdd = () => {\r\n    const img1 = data.find((ele) => ele.author === author);\r\n    // console.log(\"img\", img1.img);\r\n    const data1 = {\r\n      author: author,\r\n      quote: quotes,\r\n      img: img1.img,\r\n    };\r\n    dispatch(add(data1));\r\n    dispatch(postQuotes(data1));\r\n  };\r\n  const handleSearch = () => {\r\n    dispatch(\r\n      getData({\r\n        q: search,\r\n      })\r\n    );\r\n    history.push(\"/quotes\");\r\n  };\r\n  return (\r\n    <div\r\n      style={{\r\n        width: \"75%\",\r\n        // border: \"1px solid black\",\r\n        margin: \"auto\",\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n        marginTop: \"6%\",\r\n      }}\r\n    >\r\n      <div style={{ width: \"67%\", marginTop: \"-70px\" }}>\r\n        <Link to=\"/quotes\">\r\n          <span style={{ fontSize: \"25px\" }}>Quotes</span>\r\n        </Link>\r\n        <span style={{ fontSize: \"20px\", fontWeight: \"600\" }}> >Add</span>\r\n        <p style={{ marginLeft: \"10px\", marginTop: \"10px\", fontSize: \"14px\" }}>\r\n          Before adding a new quote please first do a search and make sure it\r\n          doesn't already exist in the database.\r\n        </p>\r\n        <label htmlFor=\"\">\r\n          <p style={{ marginTop: \"13px\", marginLeft: \"11px\" }}>Quote</p>\r\n          <textarea\r\n            name=\"quotes\"\r\n            value={quotes}\r\n            cols=\"40\"\r\n            rows=\"7\"\r\n            style={{ marginLeft: \"11px\" }}\r\n            onChange={(e) => setQuotes(e.target.value)}\r\n          ></textarea>\r\n        </label>\r\n        <br />\r\n        <label htmlFor=\"\">\r\n          <p style={{ marginTop: \"15px\", marginLeft: \"13px\" }}>Author</p>\r\n          <input\r\n            type=\"text\"\r\n            style={{ marginTop: \"1px\", marginLeft: \"13px\", width: \"140px\" }}\r\n            value={author}\r\n            onChange={(e) => setAuthor(e.target.value)}\r\n            placeholder=\"Author name\"\r\n          />\r\n        </label>\r\n        <br />\r\n        <button\r\n          style={{\r\n            marginLeft: \"13px\",\r\n            width: \"80px\",\r\n            height: \"31px\",\r\n            cursor: \"pointer\",\r\n            marginTop: \"20px\",\r\n          }}\r\n          onClick={handleAdd}\r\n        >\r\n          SAVE\r\n        </button>\r\n        <Link to=\"/myQuotes\">\r\n          <span style={{ marginLeft: \"30px\" }}>My quotes</span>\r\n        </Link>\r\n      </div>\r\n      <div style={{ width: \"30%\", marginTop: \"-34px\" }}>\r\n        <input\r\n          type=\"text\"\r\n          name=\"\"\r\n          style={{ width: \"180px\", height: \"23px\" }}\r\n          placeholder=\"Find quotes by author\"\r\n          value={search}\r\n          onChange={(e) => setSearch(e.target.value)}\r\n        />\r\n        <button\r\n          style={{ width: \"70px\", height: \"28px\", cursor: \"pointer\" }}\r\n          onClick={handleSearch}\r\n        >\r\n          Search\r\n        </button>\r\n        <div>\r\n          <p style={{ marginTop: \"17px\", marginLeft: \"5px\" }}>\r\n            Quote Guidelines\r\n          </p>\r\n          <ul>\r\n            <li\r\n              style={{\r\n                marginTop: \"10px\",\r\n                marginLeft: \"7px\",\r\n                fontSize: \"13px\",\r\n                marginLeft: \"10px\",\r\n              }}\r\n            >\r\n              Only enter quotes from notable people. Generally, a person is\r\n              notable if they have been the subject of published secondary\r\n              source material which is reliable, intellectually independent, and\r\n              independent of the subject.\r\n            </li>\r\n            <li\r\n              style={{\r\n                marginTop: \"10px\",\r\n                marginLeft: \"7px\",\r\n                fontSize: \"13px\",\r\n                marginLeft: \"10px\",\r\n              }}\r\n            >\r\n              Quotes can be from any source (books, spoken words, news articles,\r\n              etc) as long as they pass the above criteria.\r\n            </li>\r\n            <li\r\n              style={{\r\n                marginTop: \"10px\",\r\n                marginLeft: \"7px\",\r\n                fontSize: \"13px\",\r\n                marginLeft: \"10px\",\r\n              }}\r\n            >\r\n              Only enter the author's name in the author field (not their\r\n              birthdate or which book the quote is from).\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { AddQuotes };\r\n","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\redux\\peoplePage\\action.js",[],"C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\redux\\search\\action.js",[],"C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\redux\\genres\\action.js",[],"C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\redux\\landingPage\\action.js",[],"C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\redux\\Discussion\\action.js",["365","366","367"],"import * as ActionTypes from \"./actionTypes\";\r\nimport axios from \"axios\";\r\nconst getReq = () => {\r\n  return {\r\n    type: ActionTypes.GET_POST_REQ,\r\n  };\r\n};\r\nconst getSuccess = (payload) => {\r\n  return {\r\n    type: ActionTypes.GET_POST_SUCSESS,\r\n    payload,\r\n  };\r\n};\r\nconst getFail = (payload) => {\r\n  return {\r\n    type: ActionTypes.GET_POST_FAIL,\r\n    payload,\r\n  };\r\n};\r\nconst getDataReq = () => {\r\n  return {\r\n    type: ActionTypes.GET_REQ,\r\n  };\r\n};\r\nconst getDataSuccess = (payload) => {\r\n  return {\r\n    type: ActionTypes.GET_SUCSESS,\r\n    payload,\r\n  };\r\n};\r\nconst getDataFail = (payload) => {\r\n  return {\r\n    type: ActionTypes.GET_FAIL,\r\n    payload,\r\n  };\r\n};\r\nexport const getPostDis = (payload) => (dispatch) => {\r\n  console.log(payload);\r\n  dispatch(getReq());\r\n  axios\r\n    .post(\"https://json-server-test-mocker-him.herokuapp.com/posts\", {\r\n      bookname: payload.bookname,\r\n      topic: payload.topic,\r\n      comment: payload.comment,\r\n      addBook: payload.addBook,\r\n      author: payload.author,\r\n      id: 1,\r\n    })\r\n    .then((res) => {\r\n      dispatch(getDataReq());\r\n      axios\r\n        .get(\"https://json-server-test-mocker-him.herokuapp.com/posts/1\")\r\n        .then((res) => {\r\n          console.log(\"res\", res.data);\r\n          dispatch(getDataSuccess(res.data));\r\n        })\r\n        .catch((err) => {\r\n          dispatch(getDataFail(err));\r\n        });\r\n    })\r\n    .catch((err) => {\r\n      dispatch(getFail(err));\r\n    });\r\n};\r\n// export const getDataPost = (payload) => (dispatch) => {\r\n\r\n//   return axios\r\n\r\n// };\r\n//for the particular comment to post\r\n\r\nconst postReq1 = () => {\r\n  return {\r\n    type: ActionTypes.POST1_REQ,\r\n  };\r\n};\r\nconst postSuccess1 = (payload) => {\r\n  return {\r\n    type: ActionTypes.POST1_SUCSESS,\r\n    payload,\r\n  };\r\n};\r\nconst postFail1 = (payload) => {\r\n  return {\r\n    type: ActionTypes.POST1_FAIL,\r\n    payload,\r\n  };\r\n};\r\nconst getPost1Req = () => {\r\n  return {\r\n    type: ActionTypes.GET_POST1_REQ,\r\n  };\r\n};\r\nconst getPost1Success = (payload) => {\r\n  return {\r\n    type: ActionTypes.GET_POST1_SUCSESS,\r\n    payload,\r\n  };\r\n};\r\nconst getPost1Fail = (payload) => {\r\n  return {\r\n    type: ActionTypes.GET_POST1_FAIL,\r\n    payload,\r\n  };\r\n};\r\n\r\nexport const Post1Dis = (payload) => (dispatch) => {\r\n  console.log(payload);\r\n  dispatch(postReq1());\r\n  axios\r\n    .post(\"https://json-server-test-mocker-him.herokuapp.com/postcomments\", {\r\n      comment: payload.post,\r\n    })\r\n    .then((res) => {\r\n      axios\r\n        .get(\"https://json-server-test-mocker-him.herokuapp.com/postcomments/4\")\r\n        .then((res) => {\r\n          dispatch(getPost1Success(res.data));\r\n        })\r\n        .catch((err) => {\r\n          dispatch(getPost1Fail(err));\r\n        });\r\n    })\r\n    .catch((err) => {\r\n      dispatch(postFail1(err));\r\n    });\r\n};\r\n","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\redux\\allOptions\\action.js",[],"C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\redux\\Quotes\\actionadd.js",[],"C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\redux\\Trivia\\action.js",[],"C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\redux\\myBooks\\action.js",[],"C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\redux\\Quotes\\action.js",["368"],"import * as ActionTypes from \"./actionType\";\r\nimport axios from \"axios\";\r\nconst getReq = () => {\r\n  return {\r\n    type: ActionTypes.GET_REQ,\r\n  };\r\n};\r\nconst getSuccess = (payload) => {\r\n  return {\r\n    type: ActionTypes.GET_SUCCESS,\r\n    payload,\r\n  };\r\n};\r\nconst getFail = (payload) => {\r\n  return {\r\n    type: ActionTypes.GET_FAIL,\r\n  };\r\n};\r\nconst postSuccess = (payload) => {\r\n  return {\r\n    type: ActionTypes.POST_SUCEESS,\r\n  };\r\n};\r\nconst postFail = () => {\r\n  return {\r\n    type: ActionTypes.POST_FAIL,\r\n  };\r\n};\r\nexport const getData = (params = {}) => (dispatch) => {\r\n  dispatch(getReq());\r\n  console.log(\"quotes\", params);\r\n  axios\r\n    .get(\"https://json-server-test-mocker-him.herokuapp.com/quotes\", {\r\n      params,\r\n    })\r\n    .then((res) => {\r\n      dispatch(getSuccess(res.data));\r\n    })\r\n    .catch((err) => {\r\n      dispatch(getFail(err));\r\n    });\r\n};\r\nexport const postQuotes = (payload) => (dispatch) => {\r\n  console.log(\"postquotes\", payload);\r\n  axios\r\n    .post(\"https://json-server-test-mocker-him.herokuapp.com/quotes\", {\r\n      author: payload.author,\r\n      img: payload.img,\r\n      quote: payload.quote,\r\n    })\r\n    .then((res) => {\r\n      dispatch(postSuccess(res.data));\r\n    })\r\n    .catch((err) => {\r\n      console.log(\"err in posting a quotes\");\r\n    });\r\n};\r\n","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\redux\\Post\\action.js",["369","370","371","372"],"import { GET_POSTS_FAILURE, GET_POSTS_REQUEST, GET_POSTS_SUCCESS } from \"./actionType\"\r\nimport { UPDATE_POSTS_FAILURE, UPDATE_POSTS_REQUEST, UPDATE_POSTS_SUCCESS } from \"./actionType\"\r\nimport axios from \"axios\"\r\n\r\nconst getPostsRequest = (payload) =>{\r\n    return{\r\n        type: GET_POSTS_REQUEST,\r\n        payload\r\n    }\r\n}\r\n\r\nconst getPostsSuccess = (payload) =>{\r\n    return{\r\n        type: GET_POSTS_SUCCESS,\r\n        payload\r\n    }\r\n}\r\n\r\nconst getPostsFailure = (payload) =>{\r\n    return{\r\n        type: GET_POSTS_FAILURE,\r\n        payload\r\n    }\r\n}\r\n\r\nconst getPosts = (payload) => (dispatch) =>{\r\n    dispatch(getPostsRequest);\r\n    return axios\r\n    .get(\"https://good-reads-users-mock.herokuapp.com/community_updates\")\r\n    .then(res => dispatch(getPostsSuccess(res.data)))\r\n    .catch(err => {\r\n        dispatch(getPostsFailure(err))\r\n    })\r\n}\r\n\r\n\r\n\r\nconst updatePostsRequest = (payload) =>{\r\n    return{\r\n        type: UPDATE_POSTS_REQUEST,\r\n        payload\r\n    }\r\n}\r\n\r\nconst updatePostsSuccess = (payload) =>{\r\n    return{\r\n        type: UPDATE_POSTS_SUCCESS,\r\n        payload\r\n    }\r\n}\r\n\r\nconst updatePostsFailure = (payload) =>{\r\n    return{\r\n        type: UPDATE_POSTS_FAILURE,\r\n        payload\r\n    }\r\n}\r\n\r\n\r\nconst updatePosts = (id, commentObj) => async(dispatch) => {\r\n    try{\r\n        if(commentObj !== null){\r\n            let res = await axios.get(`https://good-reads-users-mock.herokuapp.com/community_updates/${id}`)\r\n            let tempData = res.data.comments;\r\n            tempData.push(commentObj)\r\n            dispatch(updatePostsRequest)\r\n            const det = await axios.patch(`https://good-reads-users-mock.herokuapp.com/community_updates/${id}`,{\r\n                comments : tempData\r\n            })\r\n        }else{\r\n            let res = await axios.get(`https://good-reads-users-mock.herokuapp.com/community_updates/${id}`)\r\n            let tempData = res.data.likes;\r\n            tempData++;\r\n            dispatch(updatePostsRequest)\r\n            const det = await axios.patch(`https://good-reads-users-mock.herokuapp.com/community_updates/${id}`,{\r\n                 likes : tempData\r\n            })\r\n        }\r\n    }catch (err){\r\n        console.log(err);\r\n    }\r\n}\r\n\r\nexport {updatePosts, getPosts}","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\pages\\Trivia\\TriviaQuestuion.jsx",[],"C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\components\\shelfBookCard\\ShelfBookCard.jsx",[],"C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\components\\searchBar\\Search.jsx",[],"C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\components\\readButton\\ReadButton.jsx",[],"C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\components\\WantToRead\\WantToRead.jsx",["373"],"import React from 'react'\r\nimport styles from \"./WantToRead.module.css\"\r\n\r\n\r\nconst WantToRead = ({image}) => {\r\n    return ( \r\n        <div className={styles.image}>\r\n            <img src={image} className={styles.center_cropped} />\r\n        </div>\r\n    \r\n    )\r\n}\r\n\r\nexport {WantToRead}\r\n","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\components\\CurrentlyReading\\CurrentlyReading.jsx",[],"C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\components\\Post\\Post.jsx",["374","375","376","377","378","379","380"],"import React from 'react'\r\nimport styles from \"./PostStyle.module.css\"\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport {Link} from \"react-router-dom\"\r\nimport {useDispatch} from \"react-redux\"\r\nimport { updatePosts } from '../../redux/Post/action';\r\nimport {v4 as uuid} from \"uuid\"\r\nimport {ReadButton} from \"../readButton/ReadButton\"\r\nimport ReactReadMoreReadLess from \"react-read-more-read-less\";\r\n\r\n\r\nconst Post = (props) => {\r\n\r\n    const {type_of_post, name, image_url, rating, review, likes, comments, id} = props;\r\n    const {authors, title, description} = props.book_data.volumeInfo;\r\n\r\n    const [commentInput, setCommentInput] = React.useState(\"\")\r\n    const [commentData, setCommentData] = React.useState([])\r\n    const [likesData, setLikesData] = React.useState(0);\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    React.useEffect(() => {\r\n        setCommentData(comments);\r\n        setLikesData(likes)\r\n    }, [])\r\n\r\n    const currUserProfile = \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTasBNP1Wz6ilTqpSe5av3iyqJhSqp44fkKeg&usqp=CAU\"\r\n    const currentUser =\"Gokhu\";\r\n\r\n    const commentObj = {\r\n        id: uuid(),\r\n        user: currentUser,\r\n        comment: commentInput,\r\n        commenterImg: currUserProfile\r\n    }\r\n\r\n    const handleComment = (id, e) => {\r\n        e.preventDefault();\r\n        dispatch(updatePosts(id, commentObj))\r\n        setCommentInput(\"\");\r\n        setCommentData([...commentData, commentObj])\r\n    }\r\n\r\n    const handleLike = (id) => {\r\n        dispatch(updatePosts(id, null))\r\n        let tempLikes = likesData;\r\n        tempLikes++;\r\n        setLikesData(tempLikes)\r\n    }\r\n\r\n    const ref = React.useRef()\r\n\r\n    const handleFocus = () => {\r\n        ref.current.focus()\r\n    }\r\n\r\n    let thumbnail;\r\n    \"imageLinks\" in props.book_data.volumeInfo ?  thumbnail = props.book_data.volumeInfo.imageLinks.thumbnail : thumbnail = \"https://via.placeholder.com/140x200\"\r\n\r\n    return (\r\n        <div className={styles.post}>\r\n            <div className={styles.post_profile}>\r\n                <img src={image_url}/>\r\n            </div>\r\n            <div className={styles.post__cont}>\r\n                <div className={styles.post__top}>\r\n                    <p className={styles.name_action}><b>{name}</b>{\r\n                        type_of_post === \"read\"? \" has read \": type_of_post === \"reading\" ? \" is reading\" : type_of_post === \"wantToRead\" ? \" wants to read\" : type_of_post === \"rating\" ? \" has rated\" : type_of_post === \"review\" ? \" has reviewed\" : \"\"\r\n                    }</p>\r\n                    {\r\n                        rating !== \"\" && \r\n                        <>\r\n                        <p>Rating:</p>\r\n                        <Rating name=\"read-only\" value={rating} readOnly />\r\n                        </>\r\n                    }\r\n                    {\r\n                        review !== \"\" && \r\n                        <p>{review}</p>\r\n                    }\r\n                    {/* <p className={styles.time_stamp}>Just Now</p> */}\r\n                </div>\r\n                <div className={styles.post__main}>\r\n                    <div>\r\n                        <img src={thumbnail}/>\r\n                    </div>\r\n                    <div className={styles.main__content}>\r\n                        <h3 style={{marginBottom:\"10px\"}}>{title}</h3>\r\n                        <p>by {authors[0]}</p>\r\n                        {/* <ReadButton/> */}\r\n                        <ReactReadMoreReadLess\r\n                            charLimit={200}\r\n                            readMoreText={\"more\"}\r\n                            readLessText={\"(less)\"}\r\n                            readMoreClassName=\"read-more-less--more\"\r\n                            readLessClassName=\"read-more-less--less\"\r\n                        >\r\n                            {description}\r\n                        </ReactReadMoreReadLess>\r\n                    </div>\r\n                </div>\r\n                <div className={styles.like_comment}>\r\n                    <button onClick={() => handleLike(id)}>{likesData !== 0 ? likesData : 0} - Likes</button><span> . </span>\r\n                    <button onClick={() => handleFocus(id)}>{comments.length !== 0 ? comments.length : 0} - Comments</button>\r\n                </div>\r\n            </div>\r\n            <div className={styles.post__bottom}>\r\n                <div style={{borderBottom : \"1px solid #D8D8D8\"}}>\r\n                    {\r\n                        commentData?.map(item => \r\n                            <>\r\n                            <div className={styles.comment_user}>\r\n                                <div className={styles.comment_user_profile}>\r\n                                    <img src={item.commenterImg}/>\r\n                                </div>\r\n                                <div className={styles.comment_comment}>\r\n                                    <p><b>{item.user}</b></p>\r\n                                    <p>{item.comment}</p>\r\n                                </div>                           \r\n                            </div>\r\n                            </>\r\n                        )\r\n                    }\r\n                \r\n                </div>\r\n                <div className={styles.current_comment}>\r\n                    <div className={styles.comment_current_profile}>\r\n                        <img src={currUserProfile}/>\r\n                    </div>\r\n                    <div className={styles.comment_current_input}>\r\n                        <form onSubmit={(e) => handleComment(id , e)}>\r\n                            <input type=\"text\" ref={ref} placeholder=\"Write a comment...\" onChange={e => setCommentInput(e.target.value)}/>\r\n                        </form>\r\n                    </div>     \r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport {Post}\r\n","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\components\\MyBooksCard\\MyBooksCard.jsx",[],"C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\components\\searchResultCard\\SearchResultCard.jsx",[],{"ruleId":"381","replacedBy":"382"},{"ruleId":"383","replacedBy":"384"},{"ruleId":"385","severity":1,"message":"386","line":3,"column":10,"nodeType":"387","messageId":"388","endLine":3,"endColumn":14},{"ruleId":"389","severity":1,"message":"390","line":13,"column":6,"nodeType":"391","endLine":13,"endColumn":8,"suggestions":"392"},{"ruleId":"385","severity":1,"message":"393","line":2,"column":25,"nodeType":"387","messageId":"388","endLine":2,"endColumn":34},{"ruleId":"385","severity":1,"message":"394","line":3,"column":10,"nodeType":"387","messageId":"388","endLine":3,"endColumn":16},{"ruleId":"385","severity":1,"message":"395","line":6,"column":9,"nodeType":"387","messageId":"388","endLine":6,"endColumn":15},{"ruleId":"385","severity":1,"message":"396","line":7,"column":11,"nodeType":"387","messageId":"388","endLine":7,"endColumn":24},{"ruleId":"385","severity":1,"message":"397","line":7,"column":25,"nodeType":"387","messageId":"388","endLine":7,"endColumn":29},{"ruleId":"385","severity":1,"message":"398","line":7,"column":31,"nodeType":"387","messageId":"388","endLine":7,"endColumn":36},{"ruleId":"385","severity":1,"message":"395","line":4,"column":10,"nodeType":"387","messageId":"388","endLine":4,"endColumn":16},{"ruleId":"385","severity":1,"message":"399","line":2,"column":9,"nodeType":"387","messageId":"388","endLine":2,"endColumn":20},{"ruleId":"389","severity":1,"message":"400","line":16,"column":8,"nodeType":"391","endLine":16,"endColumn":10,"suggestions":"401"},{"ruleId":"389","severity":1,"message":"400","line":16,"column":8,"nodeType":"391","endLine":16,"endColumn":10,"suggestions":"402"},{"ruleId":"389","severity":1,"message":"403","line":15,"column":8,"nodeType":"391","endLine":15,"endColumn":10,"suggestions":"404"},{"ruleId":"385","severity":1,"message":"395","line":5,"column":10,"nodeType":"387","messageId":"388","endLine":5,"endColumn":16},{"ruleId":"385","severity":1,"message":"405","line":8,"column":10,"nodeType":"387","messageId":"388","endLine":8,"endColumn":18},{"ruleId":"385","severity":1,"message":"406","line":6,"column":3,"nodeType":"387","messageId":"388","endLine":6,"endColumn":14},{"ruleId":"385","severity":1,"message":"407","line":8,"column":3,"nodeType":"387","messageId":"388","endLine":8,"endColumn":15},{"ruleId":"385","severity":1,"message":"408","line":13,"column":9,"nodeType":"387","messageId":"388","endLine":13,"endColumn":19},{"ruleId":"385","severity":1,"message":"409","line":8,"column":10,"nodeType":"387","messageId":"388","endLine":8,"endColumn":16},{"ruleId":"389","severity":1,"message":"390","line":16,"column":6,"nodeType":"391","endLine":16,"endColumn":8,"suggestions":"410"},{"ruleId":"389","severity":1,"message":"411","line":19,"column":6,"nodeType":"391","endLine":19,"endColumn":20,"suggestions":"412"},{"ruleId":"389","severity":1,"message":"390","line":20,"column":6,"nodeType":"391","endLine":20,"endColumn":8,"suggestions":"413"},{"ruleId":"385","severity":1,"message":"405","line":3,"column":16,"nodeType":"387","messageId":"388","endLine":3,"endColumn":24},{"ruleId":"385","severity":1,"message":"406","line":5,"column":22,"nodeType":"387","messageId":"388","endLine":5,"endColumn":33},{"ruleId":"414","severity":1,"message":"415","line":90,"column":11,"nodeType":"416","endLine":90,"endColumn":25},{"ruleId":"385","severity":1,"message":"417","line":29,"column":15,"nodeType":"387","messageId":"388","endLine":29,"endColumn":21},{"ruleId":"389","severity":1,"message":"418","line":34,"column":6,"nodeType":"391","endLine":34,"endColumn":8,"suggestions":"419"},{"ruleId":"389","severity":1,"message":"390","line":18,"column":8,"nodeType":"391","endLine":18,"endColumn":16,"suggestions":"420"},{"ruleId":"421","severity":1,"message":"422","line":11,"column":11,"nodeType":"423","endLine":11,"endColumn":207},{"ruleId":"385","severity":1,"message":"424","line":5,"column":10,"nodeType":"387","messageId":"388","endLine":5,"endColumn":21},{"ruleId":"389","severity":1,"message":"425","line":31,"column":8,"nodeType":"391","endLine":31,"endColumn":15,"suggestions":"426"},{"ruleId":"427","severity":1,"message":"428","line":36,"column":51,"nodeType":"429","messageId":"430","endLine":36,"endColumn":53},{"ruleId":"427","severity":1,"message":"428","line":49,"column":51,"nodeType":"429","messageId":"430","endLine":49,"endColumn":53},{"ruleId":"385","severity":1,"message":"431","line":3,"column":23,"nodeType":"387","messageId":"388","endLine":3,"endColumn":34},{"ruleId":"427","severity":1,"message":"428","line":30,"column":51,"nodeType":"429","messageId":"430","endLine":30,"endColumn":53},{"ruleId":"427","severity":1,"message":"428","line":39,"column":51,"nodeType":"429","messageId":"430","endLine":39,"endColumn":53},{"ruleId":"427","severity":1,"message":"428","line":49,"column":51,"nodeType":"429","messageId":"430","endLine":49,"endColumn":53},{"ruleId":"385","severity":1,"message":"405","line":2,"column":16,"nodeType":"387","messageId":"388","endLine":2,"endColumn":24},{"ruleId":"432","severity":1,"message":"433","line":117,"column":17,"nodeType":"434","messageId":"435","endLine":117,"endColumn":27},{"ruleId":"432","severity":1,"message":"433","line":130,"column":17,"nodeType":"434","messageId":"435","endLine":130,"endColumn":27},{"ruleId":"432","severity":1,"message":"433","line":141,"column":17,"nodeType":"434","messageId":"435","endLine":141,"endColumn":27},{"ruleId":"385","severity":1,"message":"436","line":8,"column":7,"nodeType":"387","messageId":"388","endLine":8,"endColumn":17},{"ruleId":"385","severity":1,"message":"437","line":77,"column":7,"nodeType":"387","messageId":"388","endLine":77,"endColumn":19},{"ruleId":"385","severity":1,"message":"438","line":89,"column":7,"nodeType":"387","messageId":"388","endLine":89,"endColumn":18},{"ruleId":"385","severity":1,"message":"439","line":24,"column":7,"nodeType":"387","messageId":"388","endLine":24,"endColumn":15},{"ruleId":"385","severity":1,"message":"440","line":45,"column":7,"nodeType":"387","messageId":"388","endLine":45,"endColumn":25},{"ruleId":"385","severity":1,"message":"441","line":52,"column":7,"nodeType":"387","messageId":"388","endLine":52,"endColumn":25},{"ruleId":"385","severity":1,"message":"442","line":67,"column":19,"nodeType":"387","messageId":"388","endLine":67,"endColumn":22},{"ruleId":"385","severity":1,"message":"442","line":75,"column":19,"nodeType":"387","messageId":"388","endLine":75,"endColumn":22},{"ruleId":"421","severity":1,"message":"422","line":8,"column":13,"nodeType":"423","endLine":8,"endColumn":66},{"ruleId":"385","severity":1,"message":"397","line":4,"column":9,"nodeType":"387","messageId":"388","endLine":4,"endColumn":13},{"ruleId":"385","severity":1,"message":"443","line":8,"column":9,"nodeType":"387","messageId":"388","endLine":8,"endColumn":19},{"ruleId":"389","severity":1,"message":"444","line":26,"column":8,"nodeType":"391","endLine":26,"endColumn":10,"suggestions":"445"},{"ruleId":"421","severity":1,"message":"422","line":64,"column":17,"nodeType":"423","endLine":64,"endColumn":39},{"ruleId":"421","severity":1,"message":"422","line":86,"column":25,"nodeType":"423","endLine":86,"endColumn":47},{"ruleId":"421","severity":1,"message":"422","line":115,"column":37,"nodeType":"423","endLine":115,"endColumn":67},{"ruleId":"421","severity":1,"message":"422","line":129,"column":25,"nodeType":"423","endLine":129,"endColumn":53},"no-native-reassign",["446"],"no-negated-in-lhs",["447"],"no-unused-vars","'Main' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["448"],"'useParams' is defined but never used.","'Navbar' is defined but never used.","'Footer' is defined but never used.","'useRouteMatch' is defined but never used.","'Link' is defined but never used.","'Route' is defined but never used.","'useSelector' is defined but never used.","React Hook React.useEffect has missing dependencies: 'dispatch' and 'endpoint'. Either include them or remove the dependency array.",["449"],["450"],"React Hook React.useEffect has missing dependencies: 'dispatch' and 'type'. Either include them or remove the dependency array.",["451"],"'Redirect' is defined but never used.","'getDataPost' is defined but never used.","'getDataPost1' is defined but never used.","'isLoading2' is assigned a value but never used.","'Search' is defined but never used.",["452"],"React Hook React.useEffect has a missing dependency: 'getImages'. Either include it or remove the dependency array.",["453"],["454"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'setNum' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'dispatch', 'num', and 'q'. Either include them or remove the dependency array.",["455"],["456"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'updatePosts' is defined but never used.","React Hook React.useEffect has missing dependencies: 'getCurrentlyReading' and 'getWantToRead'. Either include them or remove the dependency array.",["457"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'useDispatch' is defined but never used.","no-dupe-keys","Duplicate key 'marginLeft'.","ObjectExpression","unexpected","'getSuccess' is assigned a value but never used.","'postSuccess1' is assigned a value but never used.","'getPost1Req' is assigned a value but never used.","'postFail' is assigned a value but never used.","'updatePostsSuccess' is assigned a value but never used.","'updatePostsFailure' is assigned a value but never used.","'det' is assigned a value but never used.","'ReadButton' is defined but never used.","React Hook React.useEffect has missing dependencies: 'comments' and 'likes'. Either include them or remove the dependency array.",["458"],"no-global-assign","no-unsafe-negation",{"desc":"459","fix":"460"},{"desc":"461","fix":"462"},{"desc":"461","fix":"463"},{"desc":"464","fix":"465"},{"desc":"459","fix":"466"},{"desc":"467","fix":"468"},{"desc":"459","fix":"469"},{"desc":"470","fix":"471"},{"desc":"472","fix":"473"},{"desc":"474","fix":"475"},{"desc":"476","fix":"477"},"Update the dependencies array to be: [dispatch]",{"range":"478","text":"479"},"Update the dependencies array to be: [dispatch, endpoint]",{"range":"480","text":"481"},{"range":"482","text":"481"},"Update the dependencies array to be: [dispatch, type]",{"range":"483","text":"484"},{"range":"485","text":"479"},"Update the dependencies array to be: [currentIndex, getImages]",{"range":"486","text":"487"},{"range":"488","text":"479"},"Update the dependencies array to be: [dispatch, num, q]",{"range":"489","text":"490"},"Update the dependencies array to be: [bookId, dispatch]",{"range":"491","text":"492"},"Update the dependencies array to be: [books, getCurrentlyReading, getWantToRead]",{"range":"493","text":"494"},"Update the dependencies array to be: [comments, likes]",{"range":"495","text":"496"},[382,384],"[dispatch]",[615,617],"[dispatch, endpoint]",[638,640],[568,570],"[dispatch, type]",[690,692],[746,760],"[currentIndex, getImages]",[638,640],[1354,1356],"[dispatch, num, q]",[734,742],"[bookId, dispatch]",[1203,1210],"[books, getCurrentlyReading, getWantToRead]",[924,926],"[comments, likes]"]